2023-12-12 12:40:38: Loading Data
2023-12-12 12:41:32: Creating Proper Columns
2023-12-12 12:41:41: Computing Numerical Statistics for Interesting Columns
2023-12-12 12:41:43: Plotting Loan_Status_Distribution
2023-12-12 12:41:48: Plotting Correlation_Matrix
2023-12-12 12:41:49: Plotting Distribution_of_Installments_By_Loan_Status
2023-12-12 12:41:51: Plotting Distribution_of_Loan_Amount_By_Loan_Status
2023-12-12 12:41:53: Plotting Distribution_of_Interest_Rate_By_Loan_Status
2023-12-12 12:41:55: Plotting Distribution_of_Annual_Income_By_Loan_Status
2023-12-12 12:41:57: Plotting Violin_of_Installments_By_Loan_Status
2023-12-12 12:42:11: Plotting Violin_of_Loan_Amount_By_Loan_Status
2023-12-12 12:42:25: Plotting Distribution_of_Loan_Grade_By_Loan_Status
2023-12-12 12:42:31: Plotting Distribution_of_Loan_Sub_Grade_By_Loan_Status
2023-12-12 12:42:41: Plotting Distribution_of_Home_Ownership_Status_By_Loan_Status
2023-12-12 12:42:50: Plotting Distribution_of_Income_Verification_Status_By_Loan_Status
2023-12-12 12:43:00: Plotting Distribution_of_Term_Length_By_Loan_Status
2023-12-12 12:43:06: Plotting Distribution_of_Loan_Purpose_By_Loan_Status
2023-12-12 12:43:15: Plotting Distribution_of_Issue_Date_By_Loan_Status
2023-12-12 12:43:22: Plotting Distribution_of_Earliest_Credit_Line_Date_By_Loan_Status
2023-12-12 12:43:28: Plotting Distribution_of_Debt_To_Income_By_Loan_Status
2023-12-12 12:43:30: Plotting Distribution_of_Number_Of_Open_Accounts_By_Loan_Status
2023-12-12 12:43:32: Plotting Distribution_of_Revol_Util_By_Loan_Status
2023-12-12 12:43:34: Plotting Distribution_of_Revol_Bal_By_Loan_Status
2023-12-12 12:43:36: Plotting Distribution_of_Number_of_Public_Records_By_Loan_Status
2023-12-12 12:43:43: Plotting Distribution_of_Initial_Listing_Status_By_Loan_Status
2023-12-12 12:43:49: Plotting Distribution_of_Application_Type_By_Loan_Status
2023-12-12 12:43:59: Plotting Distribution_of_Number_of_Public_Record_Bankruptcies_By_Loan_Status
2023-12-12 12:44:07: Plotting Correlation_Between_Loan_Status_And_Numerical_Features
2023-12-12 12:44:07: Done!
2023-12-12 14:37:01: Reading Columns Full Names
2023-12-12 14:39:52: Reading Columns Full Names
2023-12-12 14:39:52: Reading Columns Descriptions
2023-12-12 14:40:10: Reading Columns Full Names
2023-12-12 14:40:10: Reading Columns Descriptions
2023-12-12 14:40:16: Reading Columns Full Names
2023-12-12 14:40:16: Reading Columns Descriptions
2023-12-12 14:40:24: Reading Columns Full Names
2023-12-12 14:40:24: Reading Columns Descriptions
2023-12-12 14:40:24: Loading data CSV
2023-12-12 14:40:48: Reading Columns Full Names
2023-12-12 14:40:48: Reading Columns Descriptions
2023-12-12 14:40:48: Loading data CSV
2023-12-12 14:42:30: Loading Metadata
2023-12-12 14:42:30: Creating UNIX columns for dates
2023-12-12 15:27:03: Creating other interesting columns
2023-12-12 15:27:07: Dropping proper columns
2023-12-12 15:27:53: Filling proper columns
2023-12-12 15:27:53: Casting columns in proper types
2023-12-12 15:28:00: Adjusting all missing values to pd.NA
2023-12-12 15:51:15: ----------------------Logger Initialized for csv_to_sqlite.py----------------------
2023-12-12 15:51:15: Reading Columns Full Names
2023-12-12 15:51:15: Reading Columns Descriptions
2023-12-12 15:51:15: Loading data CSV
2023-12-12 15:52:54: Loading Metadata
2023-12-12 15:52:54: Creating UNIX columns for dates
2023-12-12 16:34:35: Creating other interesting columns
2023-12-12 16:34:39: Dropping proper columns
2023-12-12 16:35:19: Filling proper columns
2023-12-12 16:35:19: Casting columns in proper types
2023-12-12 16:35:25: Adjusting all missing values to pd.NA
2023-12-13 07:58:05: ----------------------Logger Initialized for csv_to_sqlite.py----------------------
2023-12-13 07:58:05: Reading Columns Full Names
2023-12-13 07:58:05: Reading Columns Descriptions
2023-12-13 07:58:05: Loading data CSV
2023-12-13 07:59:34: Loading Metadata
2023-12-13 07:59:34: Creating UNIX columns for dates
2023-12-13 08:46:41: Creating other interesting columns
2023-12-13 08:46:47: Dropping proper columns
2023-12-13 08:47:55: Filling proper columns
2023-12-13 08:47:55: Casting columns in proper types
2023-12-13 08:48:04: Adjusting all missing values to pd.NA
2023-12-13 08:49:53: Connecting to Database
2023-12-13 08:49:53: Creating Queries
2023-12-13 08:49:53: Dropping old tables and creating new ones
2023-12-13 08:49:53: Loading data into tables
2023-12-13 08:53:24: ----------------------Done with csv_to_sqlite.py----------------------
2023-12-13 11:01:51: ----------------------Logger Initialized for csv_to_sqlite.py----------------------
2023-12-13 11:01:51: Reading Columns Full Names
2023-12-13 11:01:51: Reading Columns Descriptions
2023-12-13 11:01:51: Loading data CSV
2023-12-13 11:03:43: Loading Metadata
2023-12-13 11:03:43: Finding Date Columns
2023-12-13 11:03:54: Creating UNIX Timestamp Columns for Dates
2023-12-13 11:03:54: Converting column debt_settlement_flag_date to UNIX time
2023-12-13 11:03:55: Converting column earliest_cr_line to UNIX time
2023-12-13 11:03:55: Converting column hardship_end_date to UNIX time
2023-12-13 11:03:55: Converting column hardship_start_date to UNIX time
2023-12-13 11:03:55: Converting column issue_d to UNIX time
2023-12-13 11:03:55: Converting column last_credit_pull_d to UNIX time
2023-12-13 11:03:55: Converting column last_pymnt_d to UNIX time
2023-12-13 11:03:56: Converting column next_pymnt_d to UNIX time
2023-12-13 11:03:56: Converting column payment_plan_start_date to UNIX time
2023-12-13 11:03:56: Converting column sec_app_earliest_cr_line to UNIX time
2023-12-13 11:03:56: Converting column settlement_date to UNIX time
2023-12-13 11:03:56: Creating interesting columns
2023-12-13 11:03:58: Dropping uninteresting columns
2023-12-13 11:03:58: Dropping column member_id
2023-12-13 11:04:01: Dropping column term
2023-12-13 11:04:04: Dropping column emp_length
2023-12-13 11:04:07: Dropping column debt_settlement_flag_date
2023-12-13 11:04:10: Dropping column earliest_cr_line
2023-12-13 11:04:13: Dropping column hardship_end_date
2023-12-13 11:04:15: Dropping column hardship_start_date
2023-12-13 11:04:18: Dropping column issue_d
2023-12-13 11:04:20: Dropping column last_credit_pull_d
2023-12-13 11:04:23: Dropping column last_pymnt_d
2023-12-13 11:04:25: Dropping column next_pymnt_d
2023-12-13 11:04:28: Dropping column payment_plan_start_date
2023-12-13 11:04:30: Dropping column sec_app_earliest_cr_line
2023-12-13 11:04:33: Dropping column settlement_date
2023-12-13 11:04:35: Dropping column debt_settlement_flag_date_dt
2023-12-13 11:04:38: Dropping column earliest_cr_line_dt
2023-12-13 11:04:40: Dropping column hardship_end_date_dt
2023-12-13 11:04:43: Dropping column hardship_start_date_dt
2023-12-13 11:04:45: Dropping column issue_d_dt
2023-12-13 11:04:47: Dropping column last_credit_pull_d_dt
2023-12-13 11:04:50: Dropping column last_pymnt_d_dt
2023-12-13 11:04:52: Dropping column next_pymnt_d_dt
2023-12-13 11:04:55: Dropping column payment_plan_start_date_dt
2023-12-13 11:04:57: Dropping column sec_app_earliest_cr_line_dt
2023-12-13 11:05:00: Dropping column settlement_date_dt
2023-12-13 11:05:03: Filling NaNs on some columns
2023-12-13 11:05:03: Filling NaNs in column tot_coll_amt with -1
2023-12-13 11:05:03: Filling NaNs in column tot_cur_bal with -1
2023-12-13 11:05:03: Filling NaNs in column all_util with -1
2023-12-13 11:05:03: Filling NaNs in column annual_inc_joint with -1
2023-12-13 11:05:03: Filling NaNs in column bc_open_to_buy with -1
2023-12-13 11:05:03: Filling NaNs in column deferral_term with -1
2023-12-13 11:05:03: Filling NaNs in column collection_recovery_fee with -1
2023-12-13 11:05:03: Filling NaNs in column hardship_last_payment_amount with -1
2023-12-13 11:05:03: Filling NaNs in column hardship_payoff_balance_amount with -1
2023-12-13 11:05:03: Filling NaNs in column max_bal_bc with -1
2023-12-13 11:05:03: Filling NaNs in column mo_sin_old_il_acct with -1
2023-12-13 11:05:03: Filling NaNs in column mo_sin_old_rev_tl_op with -1
2023-12-13 11:05:03: Filling NaNs in column mo_sin_rcnt_rev_tl_op with -1
2023-12-13 11:05:03: Filling NaNs in column mo_sin_rcnt_tl with -1
2023-12-13 11:05:03: Filling NaNs in column mths_since_last_delinq with -1
2023-12-13 11:05:03: Filling NaNs in column mths_since_last_major_derog with -1
2023-12-13 11:05:03: Filling NaNs in column mths_since_last_record with -1
2023-12-13 11:05:03: Filling NaNs in column mths_since_rcnt_il with -1
2023-12-13 11:05:03: Filling NaNs in column mths_since_recent_bc with -1
2023-12-13 11:05:03: Filling NaNs in column mths_since_recent_bc_dlq with -1
2023-12-13 11:05:03: Filling NaNs in column mths_since_recent_inq with -1
2023-12-13 11:05:03: Filling NaNs in column mths_since_recent_revol_delinq with -1
2023-12-13 11:05:03: Filling NaNs in column revol_bal_joint with -1
2023-12-13 11:05:03: Filling NaNs in column sec_app_fico_range_high with -1
2023-12-13 11:05:03: Filling NaNs in column sec_app_fico_range_low with -1
2023-12-13 11:05:03: Filling NaNs in column sec_app_mort_acc with -1
2023-12-13 11:05:03: Filling NaNs in column sec_app_mths_since_last_major_derog with -1
2023-12-13 11:05:03: Filling NaNs in column settlement_amount with -1
2023-12-13 11:05:03: Filling NaNs in column settlement_percentage with -1
2023-12-13 11:05:03: Filling NaNs in column settlement_term with -1
2023-12-13 11:05:03: Filling NaNs in column zip_code with -1
2023-12-13 11:05:03: Filling NaNs in column total_rev_hi_lim with -1
2023-12-13 11:05:03: Filling NaNs in column tot_hi_cred_lim with -1
2023-12-13 11:05:04: Filling NaNs in column total_bc_limit with -1
2023-12-13 11:05:04: Filling NaNs in column total_il_high_credit_limit with -1
2023-12-13 11:05:04: Filling NaNs in column acc_now_delinq with 0
2023-12-13 11:05:04: Filling NaNs in column acc_open_past_24mths with 0
2023-12-13 11:05:04: Filling NaNs in column annual_inc with 0
2023-12-13 11:05:04: Filling NaNs in column avg_cur_bal with 0
2023-12-13 11:05:04: Filling NaNs in column chargeoff_within_12_mths with 0
2023-12-13 11:05:04: Filling NaNs in column collections_12_mths_ex_med with 0
2023-12-13 11:05:04: Filling NaNs in column delinq_2yrs with 0
2023-12-13 11:05:04: Filling NaNs in column delinq_amnt with 0
2023-12-13 11:05:04: Filling NaNs in column hardship_amount with 0
2023-12-13 11:05:04: Filling NaNs in column hardship_dpd with 0
2023-12-13 11:05:04: Filling NaNs in column hardship_length with 0
2023-12-13 11:05:04: Filling NaNs in column inq_fi with 0
2023-12-13 11:05:04: Filling NaNs in column inq_last_12m with 0
2023-12-13 11:05:04: Filling NaNs in column inq_last_6mths with 0
2023-12-13 11:05:04: Filling NaNs in column mort_acc with 0
2023-12-13 11:05:04: Filling NaNs in column num_accts_ever_120_pd with 0
2023-12-13 11:05:04: Filling NaNs in column num_actv_bc_tl with 0
2023-12-13 11:05:04: Filling NaNs in column num_actv_rev_tl with 0
2023-12-13 11:05:04: Filling NaNs in column num_tl_120dpd_2m with 0
2023-12-13 11:05:04: Filling NaNs in column open_acc_6m with 0
2023-12-13 11:05:04: Filling NaNs in column open_act_il with 0
2023-12-13 11:05:04: Filling NaNs in column open_il_12m with 0
2023-12-13 11:05:04: Filling NaNs in column open_il_24m with 0
2023-12-13 11:05:04: Filling NaNs in column open_rv_12m with 0
2023-12-13 11:05:04: Filling NaNs in column open_rv_24m with 0
2023-12-13 11:05:04: Filling NaNs in column orig_projected_additional_accrued_interest with 0
2023-12-13 11:05:04: Filling NaNs in column sec_app_chargeoff_within_12_mths with 0
2023-12-13 11:05:04: Filling NaNs in column sec_app_collections_12_mths_ex_med with 0
2023-12-13 11:05:04: Filling NaNs in column sec_app_inq_last_6mths with 0
2023-12-13 11:05:04: Filling NaNs in column sec_app_num_rev_accts with 0
2023-12-13 11:05:04: Filling NaNs in column sec_app_open_acc with 0
2023-12-13 11:05:04: Filling NaNs in column sec_app_open_act_il with 0
2023-12-13 11:05:04: Filling NaNs in column total_bal_il with 0
2023-12-13 11:05:04: Filling NaNs in column total_cu_tl with 0
2023-12-13 11:05:04: Filling NaNs in column open_acc with 0
2023-12-13 11:05:04: Filling NaNs in column pub_rec with 0
2023-12-13 11:05:04: Filling NaNs in column total_acc with 0
2023-12-13 11:05:04: Filling NaNs in column num_bc_sats with 0
2023-12-13 11:05:04: Filling NaNs in column num_bc_tl with 0
2023-12-13 11:05:04: Filling NaNs in column num_il_tl with 0
2023-12-13 11:05:04: Filling NaNs in column num_op_rev_tl with 0
2023-12-13 11:05:04: Filling NaNs in column num_rev_accts with 0
2023-12-13 11:05:04: Filling NaNs in column num_rev_tl_bal_gt_0 with 0
2023-12-13 11:05:04: Filling NaNs in column num_sats with 0
2023-12-13 11:05:04: Filling NaNs in column num_tl_30dpd with 0
2023-12-13 11:05:04: Filling NaNs in column num_tl_90g_dpd_24m with 0
2023-12-13 11:05:04: Filling NaNs in column num_tl_op_past_12m with 0
2023-12-13 11:05:04: Filling NaNs in column pub_rec_bankruptcies with 0
2023-12-13 11:05:04: Filling NaNs in column tax_liens with 0
2023-12-13 11:05:04: Filling NaNs in column total_bal_ex_mort with 0
2023-12-13 11:05:05: Filling NaNs in column bc_util with 1
2023-12-13 11:05:05: Filling NaNs in column dti with 1
2023-12-13 11:05:05: Filling NaNs in column dti_joint with 1
2023-12-13 11:05:05: Filling NaNs in column il_util with 1
2023-12-13 11:05:05: Filling NaNs in column revol_util with 1
2023-12-13 11:05:05: Filling NaNs in column sec_app_revol_util with 1
2023-12-13 11:05:05: Filling NaNs in column debt_settlement_flag with 'N'
2023-12-13 11:05:05: Filling NaNs in column hardship_flag with 'N'
2023-12-13 11:05:05: Filling NaNs in column desc with an empty string
2023-12-13 11:05:05: Filling NaNs in column emp_title with an empty string
2023-12-13 11:05:05: Filling NaNs in column addr_state with an empty string
2023-12-13 11:05:05: Filling NaNs in column application_type with an empty string
2023-12-13 11:05:06: Filling NaNs in column disbursement_method with an empty string
2023-12-13 11:05:06: Filling NaNs in column hardship_loan_status with an empty string
2023-12-13 11:05:06: Filling NaNs in column hardship_reason with an empty string
2023-12-13 11:05:06: Filling NaNs in column hardship_status with an empty string
2023-12-13 11:05:06: Filling NaNs in column settlement_status with an empty string
2023-12-13 11:05:06: Filling NaNs in column title with an empty string
2023-12-13 11:05:06: Filling NaNs in column verification_status_joint with an empty string
2023-12-13 11:05:06: Filling NaNs in column hardship_type with an empty string
2023-12-13 11:05:06: Filling NaNs in column pct_tl_nvr_dlq with 100
2023-12-13 11:05:06: Filling NaNs in column percent_bc_gt_75 with 100
2023-12-13 11:05:06: Dropping columns: ['fico_range_high', 'fico_range_low', 'funded_amnt', 'funded_amnt_inv', 'grade']
2023-12-13 11:05:10: Modifying Columns
2023-12-13 11:05:12: Casting columns to Best Types
2023-12-13 11:05:12: Converting acc_now_delinq elements from float64 to int8
2023-12-13 11:05:13: Converting acc_open_past_24mths elements from float64 to int8
2023-12-13 11:05:17: Converting addr_state elements from object to object
2023-12-13 11:05:21: Converting all_util elements from float64 to int16
2023-12-13 11:05:22: Converting annual_inc elements from float64 to float64
2023-12-13 11:05:22: Converting annual_inc_joint elements from float64 to float64
2023-12-13 11:05:26: Converting application_type elements from object to object
2023-12-13 11:05:30: Converting avg_cur_bal elements from float64 to int32
2023-12-13 11:05:31: Converting bc_open_to_buy elements from float64 to int32
2023-12-13 11:05:31: Converting bc_util elements from float64 to float32
2023-12-13 11:05:32: Converting chargeoff_within_12_mths elements from float64 to int8
2023-12-13 11:05:33: Converting collection_recovery_fee elements from float64 to float32
2023-12-13 11:05:33: Converting collections_12_mths_ex_med elements from float64 to int8
2023-12-13 11:05:34: Converting debt_settlement_flag elements from object to bool
2023-12-13 11:05:35: Converting debt_settlement_flag_date_unix elements from int64 to int32
2023-12-13 11:05:36: Converting deferral_term elements from float64 to int8
2023-12-13 11:05:36: Converting delinq_2yrs elements from float64 to int8
2023-12-13 11:05:37: Converting delinq_amnt elements from float64 to int32
2023-12-13 11:05:38: Converting desc elements from object to object
2023-12-13 11:05:42: Converting disbursement_method elements from object to object
2023-12-13 11:05:46: Converting dti elements from float64 to float32
2023-12-13 11:05:47: Converting dti_joint elements from float64 to float32
2023-12-13 11:05:48: Converting earliest_cr_line_unix elements from int64 to int32
2023-12-13 11:05:48: Converting emp_length_years elements from int64 to int8
2023-12-13 11:05:52: Converting emp_title elements from object to object
2023-12-13 11:05:56: Converting fico_range_high elements from float64 to int16
2023-12-13 11:05:57: Converting fico_range_low elements from float64 to int16
2023-12-13 11:05:58: Converting funded_amnt elements from float64 to int32
2023-12-13 11:05:59: Converting funded_amnt_inv elements from float64 to float64
2023-12-13 11:06:02: Converting grade elements from object to object
2023-12-13 11:06:06: Converting hardship_amount elements from float64 to float32
2023-12-13 11:06:06: Converting hardship_dpd elements from float64 to int8
2023-12-13 11:06:07: Converting hardship_end_date_unix elements from int64 to int32
2023-12-13 11:06:08: Converting hardship_flag elements from object to bool
2023-12-13 11:06:09: Converting hardship_last_payment_amount elements from float64 to float32
2023-12-13 11:06:10: Converting hardship_length elements from float64 to int8
2023-12-13 11:06:12: Converting hardship_loan_status elements from object to object
2023-12-13 11:06:14: Converting hardship_payoff_balance_amount elements from float64 to float64
2023-12-13 11:06:16: Converting hardship_reason elements from object to object
2023-12-13 11:06:17: Converting hardship_start_date_unix elements from int64 to int32
2023-12-13 11:06:18: Converting hardship_status elements from object to object
2023-12-13 11:06:20: Converting hardship_type elements from object to object
2023-12-13 11:06:24: Converting home_ownership elements from object to object
2023-12-13 11:06:28: Converting id elements from int64 to int32
2023-12-13 11:06:28: Converting il_util elements from float64 to int16
2023-12-13 11:06:31: Converting initial_list_status elements from object to object
2023-12-13 11:06:34: Converting inq_fi elements from float64 to int8
2023-12-13 11:06:34: Converting inq_last_12m elements from float64 to int8
2023-12-13 11:06:35: Converting inq_last_6mths elements from float64 to int8
2023-12-13 11:06:35: Converting installment elements from float64 to float32
2023-12-13 11:06:36: Converting int_rate elements from float64 to float32
2023-12-13 11:06:37: Converting issue_d_unix elements from int64 to int32
2023-12-13 11:06:37: Converting last_credit_pull_d_unix elements from int64 to int32
2023-12-13 11:06:38: Converting last_fico_range_high elements from float64 to int16
2023-12-13 11:06:38: Converting last_fico_range_low elements from float64 to int16
2023-12-13 11:06:39: Converting last_pymnt_amnt elements from float64 to float64
2023-12-13 11:06:39: Converting last_pymnt_d_unix elements from int64 to int32
2023-12-13 11:06:40: Converting loan_amnt elements from float64 to int32
2023-12-13 11:06:43: Converting loan_status elements from object to object
2023-12-13 11:06:46: Converting max_bal_bc elements from float64 to int32
2023-12-13 11:06:46: Converting mo_sin_old_il_acct elements from float64 to int16
2023-12-13 11:06:47: Converting mo_sin_old_rev_tl_op elements from float64 to int16
2023-12-13 11:06:47: Converting mo_sin_rcnt_rev_tl_op elements from float64 to int16
2023-12-13 11:06:48: Converting mo_sin_rcnt_tl elements from float64 to int16
2023-12-13 11:06:48: Converting mort_acc elements from float64 to int8
2023-12-13 11:06:48: Converting mths_since_last_delinq elements from float64 to int16
2023-12-13 11:06:49: Converting mths_since_last_major_derog elements from float64 to int16
2023-12-13 11:06:49: Converting mths_since_last_record elements from float64 to int16
2023-12-13 11:06:50: Converting mths_since_rcnt_il elements from float64 to int16
2023-12-13 11:06:50: Converting mths_since_recent_bc elements from float64 to int16
2023-12-13 11:06:51: Converting mths_since_recent_bc_dlq elements from float64 to int16
2023-12-13 11:06:51: Converting mths_since_recent_inq elements from float64 to int8
2023-12-13 11:06:51: Converting mths_since_recent_revol_delinq elements from float64 to int16
2023-12-13 11:06:52: Converting next_pymnt_d_unix elements from int64 to int32
2023-12-13 11:06:52: Converting num_accts_ever_120_pd elements from float64 to int8
2023-12-13 11:06:53: Converting num_actv_bc_tl elements from float64 to int8
2023-12-13 11:06:53: Converting num_actv_rev_tl elements from float64 to int8
2023-12-13 11:06:53: Converting num_bc_sats elements from float64 to int8
2023-12-13 11:06:54: Converting num_bc_tl elements from float64 to int8
2023-12-13 11:06:54: Converting num_il_tl elements from float64 to int16
2023-12-13 11:06:55: Converting num_op_rev_tl elements from float64 to int8
2023-12-13 11:06:55: Converting num_rev_accts elements from float64 to int16
2023-12-13 11:06:56: Converting num_rev_tl_bal_gt_0 elements from float64 to int8
2023-12-13 11:06:56: Converting num_sats elements from float64 to int8
2023-12-13 11:06:56: Converting num_tl_120dpd_2m elements from float64 to int8
2023-12-13 11:06:57: Converting num_tl_30dpd elements from float64 to int8
2023-12-13 11:06:57: Converting num_tl_90g_dpd_24m elements from float64 to int8
2023-12-13 11:06:57: Converting num_tl_op_past_12m elements from float64 to int8
2023-12-13 11:06:58: Converting open_acc elements from float64 to int8
2023-12-13 11:06:58: Converting open_acc_6m elements from float64 to int8
2023-12-13 11:06:59: Converting open_act_il elements from float64 to int8
2023-12-13 11:06:59: Converting open_il_12m elements from float64 to int8
2023-12-13 11:06:59: Converting open_il_24m elements from float64 to int8
2023-12-13 11:07:00: Converting open_rv_12m elements from float64 to int8
2023-12-13 11:07:00: Converting open_rv_24m elements from float64 to int8
2023-12-13 11:07:01: Converting orig_projected_additional_accrued_interest elements from float64 to float32
2023-12-13 11:07:02: Converting out_prncp elements from float64 to float64
2023-12-13 11:07:02: Converting out_prncp_inv elements from float64 to float64
2023-12-13 11:07:03: Converting payment_plan_start_date_unix elements from int64 to int32
2023-12-13 11:07:04: Converting pct_tl_nvr_dlq elements from float64 to float32
2023-12-13 11:07:05: Converting percent_bc_gt_75 elements from float64 to float32
2023-12-13 11:07:05: Converting policy_code elements from float64 to bool
2023-12-13 11:07:06: Converting pub_rec elements from float64 to int8
2023-12-13 11:07:07: Converting pub_rec_bankruptcies elements from float64 to int8
2023-12-13 11:07:10: Converting purpose elements from object to object
2023-12-13 11:07:16: Converting pymnt_plan elements from object to object
2023-12-13 11:07:19: Converting recoveries elements from float64 to float64
2023-12-13 11:07:19: Converting revol_bal elements from float64 to int32
2023-12-13 11:07:20: Converting revol_bal_joint elements from float64 to int32
2023-12-13 11:07:20: Converting revol_util elements from float64 to float32
2023-12-13 11:07:21: Converting sec_app_chargeoff_within_12_mths elements from float64 to int8
2023-12-13 11:07:22: Converting sec_app_collections_12_mths_ex_med elements from float64 to int8
2023-12-13 11:07:22: Converting sec_app_earliest_cr_line_unix elements from int64 to int32
2023-12-13 11:07:23: Converting sec_app_fico_range_high elements from float64 to int16
2023-12-13 11:07:23: Converting sec_app_fico_range_low elements from float64 to int16
2023-12-13 11:07:24: Converting sec_app_inq_last_6mths elements from float64 to int8
2023-12-13 11:07:24: Converting sec_app_mort_acc elements from float64 to int8
2023-12-13 11:07:25: Converting sec_app_mths_since_last_major_derog elements from float64 to int16
2023-12-13 11:07:25: Converting sec_app_num_rev_accts elements from float64 to int8
2023-12-13 11:07:26: Converting sec_app_open_acc elements from float64 to int8
2023-12-13 11:07:26: Converting sec_app_open_act_il elements from float64 to int8
2023-12-13 11:07:27: Converting sec_app_revol_util elements from float64 to float32
2023-12-13 11:07:28: Converting settlement_amount elements from float64 to float64
2023-12-13 11:07:30: Converting settlement_date_unix elements from int64 to int32
2023-12-13 11:07:31: Converting settlement_percentage elements from float64 to float32
2023-12-13 11:07:33: Converting settlement_status elements from object to object
2023-12-13 11:07:34: Converting settlement_term elements from float64 to int16
2023-12-13 11:07:39: Converting sub_grade elements from object to object
2023-12-13 11:07:43: Converting tax_liens elements from float64 to int8
2023-12-13 11:07:43: Converting term_months elements from int64 to int8
2023-12-13 11:07:46: Converting title elements from object to object
2023-12-13 11:07:49: Converting tot_coll_amt elements from float64 to int32
2023-12-13 11:07:50: Converting tot_cur_bal elements from float64 to int32
2023-12-13 11:07:50: Converting tot_hi_cred_lim elements from float64 to int32
2023-12-13 11:07:51: Converting total_acc elements from float64 to int16
2023-12-13 11:07:52: Converting total_bal_ex_mort elements from float64 to int32
2023-12-13 11:07:52: Converting total_bal_il elements from float64 to int32
2023-12-13 11:07:53: Converting total_bc_limit elements from float64 to int32
2023-12-13 11:07:53: Converting total_cu_tl elements from float64 to int8
2023-12-13 11:07:54: Converting total_il_high_credit_limit elements from float64 to int32
2023-12-13 11:07:55: Converting total_pymnt elements from float64 to float64
2023-12-13 11:07:55: Converting total_pymnt_inv elements from float64 to float64
2023-12-13 11:07:56: Converting total_rec_int elements from float64 to float64
2023-12-13 11:07:57: Converting total_rec_late_fee elements from float64 to float32
2023-12-13 11:07:58: Converting total_rec_prncp elements from float64 to float64
2023-12-13 11:07:58: Converting total_rev_hi_lim elements from float64 to int32
2023-12-13 11:08:02: Converting url elements from object to object
2023-12-13 11:08:09: Converting verification_status elements from object to object
2023-12-13 11:08:13: Converting verification_status_joint elements from object to object
2023-12-13 11:08:17: Converting zip_code elements from object to int16
2023-12-13 11:08:21: Creating Metadata Dataframe
2023-12-13 11:08:21: Creating Descriptions Dataframe
2023-12-13 11:09:48: ----------------------Logger Initialized for csv_to_sqlite.py----------------------
2023-12-13 11:09:48: Reading Columns Full Names
2023-12-13 11:09:48: Reading Columns Descriptions
2023-12-13 11:09:48: Loading data CSV
2023-12-13 11:11:28: Loading Metadata
2023-12-13 11:11:28: Finding Date Columns
2023-12-13 11:11:39: Creating UNIX Timestamp Columns for Dates
2023-12-13 11:11:39: Converting column debt_settlement_flag_date to UNIX time
2023-12-13 11:11:40: Converting column earliest_cr_line to UNIX time
2023-12-13 11:11:40: Converting column hardship_end_date to UNIX time
2023-12-13 11:11:40: Converting column hardship_start_date to UNIX time
2023-12-13 11:11:40: Converting column issue_d to UNIX time
2023-12-13 11:11:40: Converting column last_credit_pull_d to UNIX time
2023-12-13 11:11:40: Converting column last_pymnt_d to UNIX time
2023-12-13 11:11:41: Converting column next_pymnt_d to UNIX time
2023-12-13 11:11:41: Converting column payment_plan_start_date to UNIX time
2023-12-13 11:11:41: Converting column sec_app_earliest_cr_line to UNIX time
2023-12-13 11:11:41: Converting column settlement_date to UNIX time
2023-12-13 11:11:41: Creating interesting columns
2023-12-13 11:11:43: Dropping uninteresting columns
2023-12-13 11:11:43: Dropping column member_id
2023-12-13 11:11:46: Dropping column term
2023-12-13 11:11:48: Dropping column emp_length
2023-12-13 11:11:51: Dropping column debt_settlement_flag_date
2023-12-13 11:11:53: Dropping column earliest_cr_line
2023-12-13 11:11:56: Dropping column hardship_end_date
2023-12-13 11:11:58: Dropping column hardship_start_date
2023-12-13 11:12:01: Dropping column issue_d
2023-12-13 11:12:03: Dropping column last_credit_pull_d
2023-12-13 11:12:06: Dropping column last_pymnt_d
2023-12-13 11:12:08: Dropping column next_pymnt_d
2023-12-13 11:12:11: Dropping column payment_plan_start_date
2023-12-13 11:12:13: Dropping column sec_app_earliest_cr_line
2023-12-13 11:12:15: Dropping column settlement_date
2023-12-13 11:12:17: Dropping column debt_settlement_flag_date_dt
2023-12-13 11:12:20: Dropping column earliest_cr_line_dt
2023-12-13 11:12:22: Dropping column hardship_end_date_dt
2023-12-13 11:12:24: Dropping column hardship_start_date_dt
2023-12-13 11:12:26: Dropping column issue_d_dt
2023-12-13 11:12:28: Dropping column last_credit_pull_d_dt
2023-12-13 11:12:31: Dropping column last_pymnt_d_dt
2023-12-13 11:12:33: Dropping column next_pymnt_d_dt
2023-12-13 11:12:35: Dropping column payment_plan_start_date_dt
2023-12-13 11:12:37: Dropping column sec_app_earliest_cr_line_dt
2023-12-13 11:12:39: Dropping column settlement_date_dt
2023-12-13 11:12:41: Filling NaNs on some columns
2023-12-13 11:12:41: Filling NaNs in column tot_coll_amt with -1
2023-12-13 11:12:41: Filling NaNs in column tot_cur_bal with -1
2023-12-13 11:12:41: Filling NaNs in column all_util with -1
2023-12-13 11:12:41: Filling NaNs in column annual_inc_joint with -1
2023-12-13 11:12:41: Filling NaNs in column bc_open_to_buy with -1
2023-12-13 11:12:41: Filling NaNs in column deferral_term with -1
2023-12-13 11:12:41: Filling NaNs in column collection_recovery_fee with -1
2023-12-13 11:12:41: Filling NaNs in column hardship_last_payment_amount with -1
2023-12-13 11:12:41: Filling NaNs in column hardship_payoff_balance_amount with -1
2023-12-13 11:12:41: Filling NaNs in column max_bal_bc with -1
2023-12-13 11:12:41: Filling NaNs in column mo_sin_old_il_acct with -1
2023-12-13 11:12:41: Filling NaNs in column mo_sin_old_rev_tl_op with -1
2023-12-13 11:12:41: Filling NaNs in column mo_sin_rcnt_rev_tl_op with -1
2023-12-13 11:12:41: Filling NaNs in column mo_sin_rcnt_tl with -1
2023-12-13 11:12:41: Filling NaNs in column mths_since_last_delinq with -1
2023-12-13 11:12:41: Filling NaNs in column mths_since_last_major_derog with -1
2023-12-13 11:12:41: Filling NaNs in column mths_since_last_record with -1
2023-12-13 11:12:41: Filling NaNs in column mths_since_rcnt_il with -1
2023-12-13 11:12:41: Filling NaNs in column mths_since_recent_bc with -1
2023-12-13 11:12:41: Filling NaNs in column mths_since_recent_bc_dlq with -1
2023-12-13 11:12:41: Filling NaNs in column mths_since_recent_inq with -1
2023-12-13 11:12:41: Filling NaNs in column mths_since_recent_revol_delinq with -1
2023-12-13 11:12:41: Filling NaNs in column revol_bal_joint with -1
2023-12-13 11:12:41: Filling NaNs in column sec_app_fico_range_high with -1
2023-12-13 11:12:41: Filling NaNs in column sec_app_fico_range_low with -1
2023-12-13 11:12:41: Filling NaNs in column sec_app_mort_acc with -1
2023-12-13 11:12:41: Filling NaNs in column sec_app_mths_since_last_major_derog with -1
2023-12-13 11:12:41: Filling NaNs in column settlement_amount with -1
2023-12-13 11:12:41: Filling NaNs in column settlement_percentage with -1
2023-12-13 11:12:41: Filling NaNs in column settlement_term with -1
2023-12-13 11:12:41: Filling NaNs in column zip_code with -1
2023-12-13 11:12:41: Filling NaNs in column total_rev_hi_lim with -1
2023-12-13 11:12:41: Filling NaNs in column tot_hi_cred_lim with -1
2023-12-13 11:12:41: Filling NaNs in column total_bc_limit with -1
2023-12-13 11:12:41: Filling NaNs in column total_il_high_credit_limit with -1
2023-12-13 11:12:41: Filling NaNs in column acc_now_delinq with 0
2023-12-13 11:12:42: Filling NaNs in column acc_open_past_24mths with 0
2023-12-13 11:12:42: Filling NaNs in column annual_inc with 0
2023-12-13 11:12:42: Filling NaNs in column avg_cur_bal with 0
2023-12-13 11:12:42: Filling NaNs in column chargeoff_within_12_mths with 0
2023-12-13 11:12:42: Filling NaNs in column collections_12_mths_ex_med with 0
2023-12-13 11:12:42: Filling NaNs in column delinq_2yrs with 0
2023-12-13 11:12:42: Filling NaNs in column delinq_amnt with 0
2023-12-13 11:12:42: Filling NaNs in column hardship_amount with 0
2023-12-13 11:12:42: Filling NaNs in column hardship_dpd with 0
2023-12-13 11:12:42: Filling NaNs in column hardship_length with 0
2023-12-13 11:12:42: Filling NaNs in column inq_fi with 0
2023-12-13 11:12:42: Filling NaNs in column inq_last_12m with 0
2023-12-13 11:12:42: Filling NaNs in column inq_last_6mths with 0
2023-12-13 11:12:42: Filling NaNs in column mort_acc with 0
2023-12-13 11:12:42: Filling NaNs in column num_accts_ever_120_pd with 0
2023-12-13 11:12:42: Filling NaNs in column num_actv_bc_tl with 0
2023-12-13 11:12:42: Filling NaNs in column num_actv_rev_tl with 0
2023-12-13 11:12:42: Filling NaNs in column num_tl_120dpd_2m with 0
2023-12-13 11:12:42: Filling NaNs in column open_acc_6m with 0
2023-12-13 11:12:42: Filling NaNs in column open_act_il with 0
2023-12-13 11:12:42: Filling NaNs in column open_il_12m with 0
2023-12-13 11:12:42: Filling NaNs in column open_il_24m with 0
2023-12-13 11:12:42: Filling NaNs in column open_rv_12m with 0
2023-12-13 11:12:42: Filling NaNs in column open_rv_24m with 0
2023-12-13 11:12:42: Filling NaNs in column orig_projected_additional_accrued_interest with 0
2023-12-13 11:12:42: Filling NaNs in column sec_app_chargeoff_within_12_mths with 0
2023-12-13 11:12:42: Filling NaNs in column sec_app_collections_12_mths_ex_med with 0
2023-12-13 11:12:42: Filling NaNs in column sec_app_inq_last_6mths with 0
2023-12-13 11:12:42: Filling NaNs in column sec_app_num_rev_accts with 0
2023-12-13 11:12:42: Filling NaNs in column sec_app_open_acc with 0
2023-12-13 11:12:42: Filling NaNs in column sec_app_open_act_il with 0
2023-12-13 11:12:42: Filling NaNs in column total_bal_il with 0
2023-12-13 11:12:42: Filling NaNs in column total_cu_tl with 0
2023-12-13 11:12:42: Filling NaNs in column open_acc with 0
2023-12-13 11:12:42: Filling NaNs in column pub_rec with 0
2023-12-13 11:12:42: Filling NaNs in column total_acc with 0
2023-12-13 11:12:42: Filling NaNs in column num_bc_sats with 0
2023-12-13 11:12:42: Filling NaNs in column num_bc_tl with 0
2023-12-13 11:12:42: Filling NaNs in column num_il_tl with 0
2023-12-13 11:12:42: Filling NaNs in column num_op_rev_tl with 0
2023-12-13 11:12:42: Filling NaNs in column num_rev_accts with 0
2023-12-13 11:12:42: Filling NaNs in column num_rev_tl_bal_gt_0 with 0
2023-12-13 11:12:42: Filling NaNs in column num_sats with 0
2023-12-13 11:12:42: Filling NaNs in column num_tl_30dpd with 0
2023-12-13 11:12:42: Filling NaNs in column num_tl_90g_dpd_24m with 0
2023-12-13 11:12:42: Filling NaNs in column num_tl_op_past_12m with 0
2023-12-13 11:12:42: Filling NaNs in column pub_rec_bankruptcies with 0
2023-12-13 11:12:42: Filling NaNs in column tax_liens with 0
2023-12-13 11:12:42: Filling NaNs in column total_bal_ex_mort with 0
2023-12-13 11:12:42: Filling NaNs in column bc_util with 1
2023-12-13 11:12:42: Filling NaNs in column dti with 1
2023-12-13 11:12:42: Filling NaNs in column dti_joint with 1
2023-12-13 11:12:42: Filling NaNs in column il_util with 1
2023-12-13 11:12:42: Filling NaNs in column revol_util with 1
2023-12-13 11:12:42: Filling NaNs in column sec_app_revol_util with 1
2023-12-13 11:12:42: Filling NaNs in column debt_settlement_flag with 'N'
2023-12-13 11:12:42: Filling NaNs in column hardship_flag with 'N'
2023-12-13 11:12:42: Filling NaNs in column desc with an empty string
2023-12-13 11:12:42: Filling NaNs in column emp_title with an empty string
2023-12-13 11:12:43: Filling NaNs in column addr_state with an empty string
2023-12-13 11:12:43: Filling NaNs in column application_type with an empty string
2023-12-13 11:12:43: Filling NaNs in column disbursement_method with an empty string
2023-12-13 11:12:43: Filling NaNs in column hardship_loan_status with an empty string
2023-12-13 11:12:43: Filling NaNs in column hardship_reason with an empty string
2023-12-13 11:12:43: Filling NaNs in column hardship_status with an empty string
2023-12-13 11:12:43: Filling NaNs in column settlement_status with an empty string
2023-12-13 11:12:43: Filling NaNs in column title with an empty string
2023-12-13 11:12:43: Filling NaNs in column verification_status_joint with an empty string
2023-12-13 11:12:43: Filling NaNs in column hardship_type with an empty string
2023-12-13 11:12:43: Filling NaNs in column pct_tl_nvr_dlq with 100
2023-12-13 11:12:44: Filling NaNs in column percent_bc_gt_75 with 100
2023-12-13 11:12:44: Dropping columns: ['fico_range_high', 'fico_range_low', 'funded_amnt', 'funded_amnt_inv', 'grade']
2023-12-13 11:12:46: Modifying Columns
2023-12-13 11:12:48: Casting columns to Best Types
2023-12-13 11:12:48: Converting acc_now_delinq elements from float64 to int8
2023-12-13 11:12:48: Converting acc_open_past_24mths elements from float64 to int8
2023-12-13 11:12:51: Converting addr_state elements from object to object
2023-12-13 11:12:54: Converting all_util elements from float64 to int16
2023-12-13 11:12:55: Converting annual_inc elements from float64 to float64
2023-12-13 11:12:55: Converting annual_inc_joint elements from float64 to float64
2023-12-13 11:12:58: Converting application_type elements from object to object
2023-12-13 11:13:01: Converting avg_cur_bal elements from float64 to int32
2023-12-13 11:13:02: Converting bc_open_to_buy elements from float64 to int32
2023-12-13 11:13:02: Converting bc_util elements from float64 to float32
2023-12-13 11:13:03: Converting chargeoff_within_12_mths elements from float64 to int8
2023-12-13 11:13:03: Converting collection_recovery_fee elements from float64 to float32
2023-12-13 11:13:04: Converting collections_12_mths_ex_med elements from float64 to int8
2023-12-13 11:13:05: Converting debt_settlement_flag elements from object to bool
2023-12-13 11:13:06: Converting debt_settlement_flag_date_unix elements from int64 to int32
2023-12-13 11:13:06: Converting deferral_term elements from float64 to int8
2023-12-13 11:13:07: Converting delinq_2yrs elements from float64 to int8
2023-12-13 11:13:07: Converting delinq_amnt elements from float64 to int32
2023-12-13 11:13:08: Converting desc elements from object to object
2023-12-13 11:13:11: Converting disbursement_method elements from object to object
2023-12-13 11:13:15: Converting dti elements from float64 to float32
2023-12-13 11:13:15: Converting dti_joint elements from float64 to float32
2023-12-13 11:13:16: Converting earliest_cr_line_unix elements from int64 to int32
2023-12-13 11:13:16: Converting emp_length_years elements from int64 to int8
2023-12-13 11:13:19: Converting emp_title elements from object to object
2023-12-13 11:13:22: Converting fico_range_high elements from float64 to int16
2023-12-13 11:13:22: Converting fico_range_low elements from float64 to int16
2023-12-13 11:13:23: Converting funded_amnt elements from float64 to int32
2023-12-13 11:13:24: Converting funded_amnt_inv elements from float64 to float64
2023-12-13 11:13:27: Converting grade elements from object to object
2023-12-13 11:13:29: Converting hardship_amount elements from float64 to float32
2023-12-13 11:13:30: Converting hardship_dpd elements from float64 to int8
2023-12-13 11:13:30: Converting hardship_end_date_unix elements from int64 to int32
2023-12-13 11:13:31: Converting hardship_flag elements from object to bool
2023-12-13 11:13:32: Converting hardship_last_payment_amount elements from float64 to float32
2023-12-13 11:13:33: Converting hardship_length elements from float64 to int8
2023-12-13 11:13:33: Converting hardship_loan_status elements from object to object
2023-12-13 11:13:34: Converting hardship_payoff_balance_amount elements from float64 to float64
2023-12-13 11:13:35: Converting hardship_reason elements from object to object
2023-12-13 11:13:36: Converting hardship_start_date_unix elements from int64 to int32
2023-12-13 11:13:37: Converting hardship_status elements from object to object
2023-12-13 11:13:38: Converting hardship_type elements from object to object
2023-12-13 11:13:41: Converting home_ownership elements from object to object
2023-12-13 11:13:44: Converting id elements from int64 to int32
2023-12-13 11:13:44: Converting il_util elements from float64 to int16
2023-12-13 11:13:47: Converting initial_list_status elements from object to object
2023-12-13 11:13:50: Converting inq_fi elements from float64 to int8
2023-12-13 11:13:50: Converting inq_last_12m elements from float64 to int8
2023-12-13 11:13:51: Converting inq_last_6mths elements from float64 to int8
2023-12-13 11:13:51: Converting installment elements from float64 to float32
2023-12-13 11:13:52: Converting int_rate elements from float64 to float32
2023-12-13 11:13:53: Converting issue_d_unix elements from int64 to int32
2023-12-13 11:13:53: Converting last_credit_pull_d_unix elements from int64 to int32
2023-12-13 11:13:54: Converting last_fico_range_high elements from float64 to int16
2023-12-13 11:13:54: Converting last_fico_range_low elements from float64 to int16
2023-12-13 11:13:55: Converting last_pymnt_amnt elements from float64 to float64
2023-12-13 11:13:55: Converting last_pymnt_d_unix elements from int64 to int32
2023-12-13 11:13:56: Converting loan_amnt elements from float64 to int32
2023-12-13 11:13:59: Converting loan_status elements from object to object
2023-12-13 11:14:02: Converting max_bal_bc elements from float64 to int32
2023-12-13 11:14:02: Converting mo_sin_old_il_acct elements from float64 to int16
2023-12-13 11:14:03: Converting mo_sin_old_rev_tl_op elements from float64 to int16
2023-12-13 11:14:03: Converting mo_sin_rcnt_rev_tl_op elements from float64 to int16
2023-12-13 11:14:04: Converting mo_sin_rcnt_tl elements from float64 to int16
2023-12-13 11:14:04: Converting mort_acc elements from float64 to int8
2023-12-13 11:14:05: Converting mths_since_last_delinq elements from float64 to int16
2023-12-13 11:14:05: Converting mths_since_last_major_derog elements from float64 to int16
2023-12-13 11:14:06: Converting mths_since_last_record elements from float64 to int16
2023-12-13 11:14:06: Converting mths_since_rcnt_il elements from float64 to int16
2023-12-13 11:14:07: Converting mths_since_recent_bc elements from float64 to int16
2023-12-13 11:14:07: Converting mths_since_recent_bc_dlq elements from float64 to int16
2023-12-13 11:14:08: Converting mths_since_recent_inq elements from float64 to int8
2023-12-13 11:14:08: Converting mths_since_recent_revol_delinq elements from float64 to int16
2023-12-13 11:14:08: Converting next_pymnt_d_unix elements from int64 to int32
2023-12-13 11:14:09: Converting num_accts_ever_120_pd elements from float64 to int8
2023-12-13 11:14:09: Converting num_actv_bc_tl elements from float64 to int8
2023-12-13 11:14:10: Converting num_actv_rev_tl elements from float64 to int8
2023-12-13 11:14:10: Converting num_bc_sats elements from float64 to int8
2023-12-13 11:14:11: Converting num_bc_tl elements from float64 to int8
2023-12-13 11:14:11: Converting num_il_tl elements from float64 to int16
2023-12-13 11:14:11: Converting num_op_rev_tl elements from float64 to int8
2023-12-13 11:14:12: Converting num_rev_accts elements from float64 to int16
2023-12-13 11:14:12: Converting num_rev_tl_bal_gt_0 elements from float64 to int8
2023-12-13 11:14:13: Converting num_sats elements from float64 to int8
2023-12-13 11:14:13: Converting num_tl_120dpd_2m elements from float64 to int8
2023-12-13 11:14:14: Converting num_tl_30dpd elements from float64 to int8
2023-12-13 11:14:14: Converting num_tl_90g_dpd_24m elements from float64 to int8
2023-12-13 11:14:14: Converting num_tl_op_past_12m elements from float64 to int8
2023-12-13 11:14:15: Converting open_acc elements from float64 to int8
2023-12-13 11:14:15: Converting open_acc_6m elements from float64 to int8
2023-12-13 11:14:16: Converting open_act_il elements from float64 to int8
2023-12-13 11:14:16: Converting open_il_12m elements from float64 to int8
2023-12-13 11:14:17: Converting open_il_24m elements from float64 to int8
2023-12-13 11:14:17: Converting open_rv_12m elements from float64 to int8
2023-12-13 11:14:17: Converting open_rv_24m elements from float64 to int8
2023-12-13 11:14:18: Converting orig_projected_additional_accrued_interest elements from float64 to float32
2023-12-13 11:14:19: Converting out_prncp elements from float64 to float64
2023-12-13 11:14:19: Converting out_prncp_inv elements from float64 to float64
2023-12-13 11:14:20: Converting payment_plan_start_date_unix elements from int64 to int32
2023-12-13 11:14:20: Converting pct_tl_nvr_dlq elements from float64 to float32
2023-12-13 11:14:21: Converting percent_bc_gt_75 elements from float64 to float32
2023-12-13 11:14:22: Converting policy_code elements from float64 to bool
2023-12-13 11:14:22: Converting pub_rec elements from float64 to int8
2023-12-13 11:14:23: Converting pub_rec_bankruptcies elements from float64 to int8
2023-12-13 11:14:26: Converting purpose elements from object to object
2023-12-13 11:14:31: Converting pymnt_plan elements from object to object
2023-12-13 11:14:34: Converting recoveries elements from float64 to float64
2023-12-13 11:14:35: Converting revol_bal elements from float64 to int32
2023-12-13 11:14:35: Converting revol_bal_joint elements from float64 to int32
2023-12-13 11:14:36: Converting revol_util elements from float64 to float32
2023-12-13 11:14:36: Converting sec_app_chargeoff_within_12_mths elements from float64 to int8
2023-12-13 11:14:37: Converting sec_app_collections_12_mths_ex_med elements from float64 to int8
2023-12-13 11:14:37: Converting sec_app_earliest_cr_line_unix elements from int64 to int32
2023-12-13 11:14:38: Converting sec_app_fico_range_high elements from float64 to int16
2023-12-13 11:14:38: Converting sec_app_fico_range_low elements from float64 to int16
2023-12-13 11:14:39: Converting sec_app_inq_last_6mths elements from float64 to int8
2023-12-13 11:14:39: Converting sec_app_mort_acc elements from float64 to int8
2023-12-13 11:14:40: Converting sec_app_mths_since_last_major_derog elements from float64 to int16
2023-12-13 11:14:40: Converting sec_app_num_rev_accts elements from float64 to int8
2023-12-13 11:14:41: Converting sec_app_open_acc elements from float64 to int8
2023-12-13 11:14:41: Converting sec_app_open_act_il elements from float64 to int8
2023-12-13 11:14:42: Converting sec_app_revol_util elements from float64 to float32
2023-12-13 11:14:43: Converting settlement_amount elements from float64 to float64
2023-12-13 11:14:44: Converting settlement_date_unix elements from int64 to int32
2023-12-13 11:14:44: Converting settlement_percentage elements from float64 to float32
2023-12-13 11:14:46: Converting settlement_status elements from object to object
2023-12-13 11:14:47: Converting settlement_term elements from float64 to int16
2023-12-13 11:14:52: Converting sub_grade elements from object to object
2023-12-13 11:14:55: Converting tax_liens elements from float64 to int8
2023-12-13 11:14:56: Converting term_months elements from int64 to int8
2023-12-13 11:14:59: Converting title elements from object to object
2023-12-13 11:15:03: Converting tot_coll_amt elements from float64 to int32
2023-12-13 11:15:03: Converting tot_cur_bal elements from float64 to int32
2023-12-13 11:15:04: Converting tot_hi_cred_lim elements from float64 to int32
2023-12-13 11:15:04: Converting total_acc elements from float64 to int16
2023-12-13 11:15:05: Converting total_bal_ex_mort elements from float64 to int32
2023-12-13 11:15:05: Converting total_bal_il elements from float64 to int32
2023-12-13 11:15:06: Converting total_bc_limit elements from float64 to int32
2023-12-13 11:15:07: Converting total_cu_tl elements from float64 to int8
2023-12-13 11:15:07: Converting total_il_high_credit_limit elements from float64 to int32
2023-12-13 11:15:08: Converting total_pymnt elements from float64 to float64
2023-12-13 11:15:08: Converting total_pymnt_inv elements from float64 to float64
2023-12-13 11:15:09: Converting total_rec_int elements from float64 to float64
2023-12-13 11:15:10: Converting total_rec_late_fee elements from float64 to float32
2023-12-13 11:15:11: Converting total_rec_prncp elements from float64 to float64
2023-12-13 11:15:11: Converting total_rev_hi_lim elements from float64 to int32
2023-12-13 11:15:14: Converting url elements from object to object
2023-12-13 11:15:20: Converting verification_status elements from object to object
2023-12-13 11:15:23: Converting verification_status_joint elements from object to object
2023-12-13 11:15:27: Converting zip_code elements from object to int16
2023-12-13 11:15:30: Creating Metadata Dataframe
2023-12-13 11:15:31: Creating Descriptions Dataframe
2023-12-13 11:15:31: Connecting to Database
2023-12-13 11:15:31: Creating Queries
2023-12-13 11:30:52: ----------------------Logger Initialized for csv_to_sqlite.py----------------------
2023-12-13 11:30:52: Reading Columns Full Names
2023-12-13 11:30:52: Reading Columns Descriptions
2023-12-13 11:30:52: Loading data CSV
2023-12-13 11:32:17: Loading Metadata
2023-12-13 11:32:17: Finding Date Columns
2023-12-13 11:32:28: Creating UNIX Timestamp Columns for Dates
2023-12-13 11:32:28: Converting column debt_settlement_flag_date to UNIX time
2023-12-13 11:32:28: Converting column earliest_cr_line to UNIX time
2023-12-13 11:32:28: Converting column hardship_end_date to UNIX time
2023-12-13 11:32:29: Converting column hardship_start_date to UNIX time
2023-12-13 11:32:29: Converting column issue_d to UNIX time
2023-12-13 11:32:29: Converting column last_credit_pull_d to UNIX time
2023-12-13 11:32:29: Converting column last_pymnt_d to UNIX time
2023-12-13 11:32:29: Converting column next_pymnt_d to UNIX time
2023-12-13 11:32:29: Converting column payment_plan_start_date to UNIX time
2023-12-13 11:32:30: Converting column sec_app_earliest_cr_line to UNIX time
2023-12-13 11:32:30: Converting column settlement_date to UNIX time
2023-12-13 11:32:30: Creating interesting columns
2023-12-13 11:32:32: Dropping uninteresting columns
2023-12-13 11:32:32: Dropping column member_id
2023-12-13 11:32:34: Dropping column term
2023-12-13 11:32:37: Dropping column emp_length
2023-12-13 11:32:39: Dropping column debt_settlement_flag_date
2023-12-13 11:32:42: Dropping column earliest_cr_line
2023-12-13 11:32:44: Dropping column hardship_end_date
2023-12-13 11:32:46: Dropping column hardship_start_date
2023-12-13 11:32:48: Dropping column issue_d
2023-12-13 11:32:51: Dropping column last_credit_pull_d
2023-12-13 11:32:53: Dropping column last_pymnt_d
2023-12-13 11:32:55: Dropping column next_pymnt_d
2023-12-13 11:32:57: Dropping column payment_plan_start_date
2023-12-13 11:32:59: Dropping column sec_app_earliest_cr_line
2023-12-13 11:33:02: Dropping column settlement_date
2023-12-13 11:33:04: Dropping column debt_settlement_flag_date_dt
2023-12-13 11:33:06: Dropping column earliest_cr_line_dt
2023-12-13 11:33:08: Dropping column hardship_end_date_dt
2023-12-13 11:33:10: Dropping column hardship_start_date_dt
2023-12-13 11:33:12: Dropping column issue_d_dt
2023-12-13 11:33:14: Dropping column last_credit_pull_d_dt
2023-12-13 11:33:16: Dropping column last_pymnt_d_dt
2023-12-13 11:33:18: Dropping column next_pymnt_d_dt
2023-12-13 11:33:20: Dropping column payment_plan_start_date_dt
2023-12-13 11:33:22: Dropping column sec_app_earliest_cr_line_dt
2023-12-13 11:33:24: Dropping column settlement_date_dt
2023-12-13 11:33:26: Filling NaNs on some columns
2023-12-13 11:33:26: Filling NaNs in column tot_coll_amt with -1
2023-12-13 11:33:26: Filling NaNs in column tot_cur_bal with -1
2023-12-13 11:33:26: Filling NaNs in column all_util with -1
2023-12-13 11:33:26: Filling NaNs in column annual_inc_joint with -1
2023-12-13 11:33:26: Filling NaNs in column bc_open_to_buy with -1
2023-12-13 11:33:26: Filling NaNs in column deferral_term with -1
2023-12-13 11:33:26: Filling NaNs in column collection_recovery_fee with -1
2023-12-13 11:33:26: Filling NaNs in column hardship_last_payment_amount with -1
2023-12-13 11:33:26: Filling NaNs in column hardship_payoff_balance_amount with -1
2023-12-13 11:33:26: Filling NaNs in column max_bal_bc with -1
2023-12-13 11:33:26: Filling NaNs in column mo_sin_old_il_acct with -1
2023-12-13 11:33:26: Filling NaNs in column mo_sin_old_rev_tl_op with -1
2023-12-13 11:33:26: Filling NaNs in column mo_sin_rcnt_rev_tl_op with -1
2023-12-13 11:33:26: Filling NaNs in column mo_sin_rcnt_tl with -1
2023-12-13 11:33:26: Filling NaNs in column mths_since_last_delinq with -1
2023-12-13 11:33:26: Filling NaNs in column mths_since_last_major_derog with -1
2023-12-13 11:33:26: Filling NaNs in column mths_since_last_record with -1
2023-12-13 11:33:26: Filling NaNs in column mths_since_rcnt_il with -1
2023-12-13 11:33:26: Filling NaNs in column mths_since_recent_bc with -1
2023-12-13 11:33:26: Filling NaNs in column mths_since_recent_bc_dlq with -1
2023-12-13 11:33:26: Filling NaNs in column mths_since_recent_inq with -1
2023-12-13 11:33:26: Filling NaNs in column mths_since_recent_revol_delinq with -1
2023-12-13 11:33:26: Filling NaNs in column revol_bal_joint with -1
2023-12-13 11:33:26: Filling NaNs in column sec_app_fico_range_high with -1
2023-12-13 11:33:26: Filling NaNs in column sec_app_fico_range_low with -1
2023-12-13 11:33:26: Filling NaNs in column sec_app_mort_acc with -1
2023-12-13 11:33:26: Filling NaNs in column sec_app_mths_since_last_major_derog with -1
2023-12-13 11:33:26: Filling NaNs in column settlement_amount with -1
2023-12-13 11:33:26: Filling NaNs in column settlement_percentage with -1
2023-12-13 11:33:26: Filling NaNs in column settlement_term with -1
2023-12-13 11:33:26: Filling NaNs in column zip_code with -1
2023-12-13 11:33:26: Filling NaNs in column total_rev_hi_lim with -1
2023-12-13 11:33:27: Filling NaNs in column tot_hi_cred_lim with -1
2023-12-13 11:33:27: Filling NaNs in column total_bc_limit with -1
2023-12-13 11:33:27: Filling NaNs in column total_il_high_credit_limit with -1
2023-12-13 11:33:27: Filling NaNs in column acc_now_delinq with 0
2023-12-13 11:33:27: Filling NaNs in column acc_open_past_24mths with 0
2023-12-13 11:33:27: Filling NaNs in column annual_inc with 0
2023-12-13 11:33:27: Filling NaNs in column avg_cur_bal with 0
2023-12-13 11:33:27: Filling NaNs in column chargeoff_within_12_mths with 0
2023-12-13 11:33:27: Filling NaNs in column collections_12_mths_ex_med with 0
2023-12-13 11:33:27: Filling NaNs in column delinq_2yrs with 0
2023-12-13 11:33:27: Filling NaNs in column delinq_amnt with 0
2023-12-13 11:33:27: Filling NaNs in column hardship_amount with 0
2023-12-13 11:33:27: Filling NaNs in column hardship_dpd with 0
2023-12-13 11:33:27: Filling NaNs in column hardship_length with 0
2023-12-13 11:33:27: Filling NaNs in column inq_fi with 0
2023-12-13 11:33:27: Filling NaNs in column inq_last_12m with 0
2023-12-13 11:33:27: Filling NaNs in column inq_last_6mths with 0
2023-12-13 11:33:27: Filling NaNs in column mort_acc with 0
2023-12-13 11:33:27: Filling NaNs in column num_accts_ever_120_pd with 0
2023-12-13 11:33:27: Filling NaNs in column num_actv_bc_tl with 0
2023-12-13 11:33:27: Filling NaNs in column num_actv_rev_tl with 0
2023-12-13 11:33:27: Filling NaNs in column num_tl_120dpd_2m with 0
2023-12-13 11:33:27: Filling NaNs in column open_acc_6m with 0
2023-12-13 11:33:27: Filling NaNs in column open_act_il with 0
2023-12-13 11:33:27: Filling NaNs in column open_il_12m with 0
2023-12-13 11:33:27: Filling NaNs in column open_il_24m with 0
2023-12-13 11:33:27: Filling NaNs in column open_rv_12m with 0
2023-12-13 11:33:27: Filling NaNs in column open_rv_24m with 0
2023-12-13 11:33:27: Filling NaNs in column orig_projected_additional_accrued_interest with 0
2023-12-13 11:33:27: Filling NaNs in column sec_app_chargeoff_within_12_mths with 0
2023-12-13 11:33:27: Filling NaNs in column sec_app_collections_12_mths_ex_med with 0
2023-12-13 11:33:27: Filling NaNs in column sec_app_inq_last_6mths with 0
2023-12-13 11:33:27: Filling NaNs in column sec_app_num_rev_accts with 0
2023-12-13 11:33:27: Filling NaNs in column sec_app_open_acc with 0
2023-12-13 11:33:27: Filling NaNs in column sec_app_open_act_il with 0
2023-12-13 11:33:27: Filling NaNs in column total_bal_il with 0
2023-12-13 11:33:27: Filling NaNs in column total_cu_tl with 0
2023-12-13 11:33:27: Filling NaNs in column open_acc with 0
2023-12-13 11:33:27: Filling NaNs in column pub_rec with 0
2023-12-13 11:33:27: Filling NaNs in column total_acc with 0
2023-12-13 11:33:27: Filling NaNs in column num_bc_sats with 0
2023-12-13 11:33:27: Filling NaNs in column num_bc_tl with 0
2023-12-13 11:33:27: Filling NaNs in column num_il_tl with 0
2023-12-13 11:33:27: Filling NaNs in column num_op_rev_tl with 0
2023-12-13 11:33:27: Filling NaNs in column num_rev_accts with 0
2023-12-13 11:33:27: Filling NaNs in column num_rev_tl_bal_gt_0 with 0
2023-12-13 11:33:27: Filling NaNs in column num_sats with 0
2023-12-13 11:33:27: Filling NaNs in column num_tl_30dpd with 0
2023-12-13 11:33:27: Filling NaNs in column num_tl_90g_dpd_24m with 0
2023-12-13 11:33:27: Filling NaNs in column num_tl_op_past_12m with 0
2023-12-13 11:33:27: Filling NaNs in column pub_rec_bankruptcies with 0
2023-12-13 11:33:27: Filling NaNs in column tax_liens with 0
2023-12-13 11:33:27: Filling NaNs in column total_bal_ex_mort with 0
2023-12-13 11:33:27: Filling NaNs in column bc_util with 1
2023-12-13 11:33:27: Filling NaNs in column dti with 1
2023-12-13 11:33:27: Filling NaNs in column dti_joint with 1
2023-12-13 11:33:27: Filling NaNs in column il_util with 1
2023-12-13 11:33:27: Filling NaNs in column revol_util with 1
2023-12-13 11:33:27: Filling NaNs in column sec_app_revol_util with 1
2023-12-13 11:33:27: Filling NaNs in column debt_settlement_flag with 'N'
2023-12-13 11:33:27: Filling NaNs in column hardship_flag with 'N'
2023-12-13 11:33:27: Filling NaNs in column desc with an empty string
2023-12-13 11:33:27: Filling NaNs in column emp_title with an empty string
2023-12-13 11:33:27: Filling NaNs in column addr_state with an empty string
2023-12-13 11:33:27: Filling NaNs in column application_type with an empty string
2023-12-13 11:33:27: Filling NaNs in column disbursement_method with an empty string
2023-12-13 11:33:28: Filling NaNs in column hardship_loan_status with an empty string
2023-12-13 11:33:28: Filling NaNs in column hardship_reason with an empty string
2023-12-13 11:33:28: Filling NaNs in column hardship_status with an empty string
2023-12-13 11:33:28: Filling NaNs in column settlement_status with an empty string
2023-12-13 11:33:28: Filling NaNs in column title with an empty string
2023-12-13 11:33:28: Filling NaNs in column verification_status_joint with an empty string
2023-12-13 11:33:28: Filling NaNs in column hardship_type with an empty string
2023-12-13 11:33:28: Filling NaNs in column pct_tl_nvr_dlq with 100
2023-12-13 11:33:28: Filling NaNs in column percent_bc_gt_75 with 100
2023-12-13 11:33:28: Dropping columns: ['fico_range_high', 'fico_range_low', 'funded_amnt', 'funded_amnt_inv', 'grade']
2023-12-13 11:33:31: Modifying Columns
2023-12-13 11:33:32: Casting columns to Best Types
2023-12-13 11:33:33: Converting acc_now_delinq elements from float64 to int8
2023-12-13 11:33:33: Converting acc_open_past_24mths elements from float64 to int8
2023-12-13 11:33:36: Converting addr_state elements from object to object
2023-12-13 11:33:39: Converting all_util elements from float64 to int16
2023-12-13 11:33:39: Converting annual_inc elements from float64 to float64
2023-12-13 11:33:40: Converting annual_inc_joint elements from float64 to float64
2023-12-13 11:33:43: Converting application_type elements from object to object
2023-12-13 11:33:46: Converting avg_cur_bal elements from float64 to int32
2023-12-13 11:33:46: Converting bc_open_to_buy elements from float64 to int32
2023-12-13 11:33:47: Converting bc_util elements from float64 to float32
2023-12-13 11:33:47: Converting chargeoff_within_12_mths elements from float64 to int8
2023-12-13 11:33:48: Converting collection_recovery_fee elements from float64 to float32
2023-12-13 11:33:48: Converting collections_12_mths_ex_med elements from float64 to int8
2023-12-13 11:33:49: Converting debt_settlement_flag elements from object to bool
2023-12-13 11:33:50: Converting debt_settlement_flag_date_unix elements from int64 to int32
2023-12-13 11:33:51: Converting deferral_term elements from float64 to int8
2023-12-13 11:33:51: Converting delinq_2yrs elements from float64 to int8
2023-12-13 11:33:51: Converting delinq_amnt elements from float64 to int32
2023-12-13 11:33:52: Converting desc elements from object to object
2023-12-13 11:33:56: Converting disbursement_method elements from object to object
2023-12-13 11:33:59: Converting dti elements from float64 to float32
2023-12-13 11:34:00: Converting dti_joint elements from float64 to float32
2023-12-13 11:34:00: Converting earliest_cr_line_unix elements from int64 to int32
2023-12-13 11:34:00: Converting emp_length_years elements from int64 to int8
2023-12-13 11:34:03: Converting emp_title elements from object to object
2023-12-13 11:34:06: Converting fico_range_high elements from float64 to int16
2023-12-13 11:34:07: Converting fico_range_low elements from float64 to int16
2023-12-13 11:34:07: Converting funded_amnt elements from float64 to int32
2023-12-13 11:34:08: Converting funded_amnt_inv elements from float64 to float64
2023-12-13 11:34:11: Converting grade elements from object to object
2023-12-13 11:34:14: Converting hardship_amount elements from float64 to float32
2023-12-13 11:34:14: Converting hardship_dpd elements from float64 to int8
2023-12-13 11:34:14: Converting hardship_end_date_unix elements from int64 to int32
2023-12-13 11:34:15: Converting hardship_flag elements from object to bool
2023-12-13 11:34:16: Converting hardship_last_payment_amount elements from float64 to float32
2023-12-13 11:34:17: Converting hardship_length elements from float64 to int8
2023-12-13 11:34:17: Converting hardship_loan_status elements from object to object
2023-12-13 11:34:18: Converting hardship_payoff_balance_amount elements from float64 to float64
2023-12-13 11:34:19: Converting hardship_reason elements from object to object
2023-12-13 11:34:20: Converting hardship_start_date_unix elements from int64 to int32
2023-12-13 11:34:21: Converting hardship_status elements from object to object
2023-12-13 11:34:22: Converting hardship_type elements from object to object
2023-12-13 11:34:25: Converting home_ownership elements from object to object
2023-12-13 11:34:28: Converting id elements from int64 to int32
2023-12-13 11:34:28: Converting il_util elements from float64 to int16
2023-12-13 11:34:31: Converting initial_list_status elements from object to object
2023-12-13 11:34:33: Converting inq_fi elements from float64 to int8
2023-12-13 11:34:34: Converting inq_last_12m elements from float64 to int8
2023-12-13 11:34:34: Converting inq_last_6mths elements from float64 to int8
2023-12-13 11:34:35: Converting installment elements from float64 to float32
2023-12-13 11:34:36: Converting int_rate elements from float64 to float32
2023-12-13 11:34:36: Converting issue_d_unix elements from int64 to int32
2023-12-13 11:34:37: Converting last_credit_pull_d_unix elements from int64 to int32
2023-12-13 11:34:37: Converting last_fico_range_high elements from float64 to int16
2023-12-13 11:34:38: Converting last_fico_range_low elements from float64 to int16
2023-12-13 11:34:38: Converting last_pymnt_amnt elements from float64 to float64
2023-12-13 11:34:39: Converting last_pymnt_d_unix elements from int64 to int32
2023-12-13 11:34:39: Converting loan_amnt elements from float64 to int32
2023-12-13 11:34:42: Converting loan_status elements from object to object
2023-12-13 11:34:45: Converting max_bal_bc elements from float64 to int32
2023-12-13 11:34:46: Converting mo_sin_old_il_acct elements from float64 to int16
2023-12-13 11:34:46: Converting mo_sin_old_rev_tl_op elements from float64 to int16
2023-12-13 11:34:46: Converting mo_sin_rcnt_rev_tl_op elements from float64 to int16
2023-12-13 11:34:47: Converting mo_sin_rcnt_tl elements from float64 to int16
2023-12-13 11:34:47: Converting mort_acc elements from float64 to int8
2023-12-13 11:34:48: Converting mths_since_last_delinq elements from float64 to int16
2023-12-13 11:34:48: Converting mths_since_last_major_derog elements from float64 to int16
2023-12-13 11:34:49: Converting mths_since_last_record elements from float64 to int16
2023-12-13 11:34:49: Converting mths_since_rcnt_il elements from float64 to int16
2023-12-13 11:34:49: Converting mths_since_recent_bc elements from float64 to int16
2023-12-13 11:34:50: Converting mths_since_recent_bc_dlq elements from float64 to int16
2023-12-13 11:34:50: Converting mths_since_recent_inq elements from float64 to int8
2023-12-13 11:34:51: Converting mths_since_recent_revol_delinq elements from float64 to int16
2023-12-13 11:34:51: Converting next_pymnt_d_unix elements from int64 to int32
2023-12-13 11:34:51: Converting num_accts_ever_120_pd elements from float64 to int8
2023-12-13 11:34:52: Converting num_actv_bc_tl elements from float64 to int8
2023-12-13 11:34:52: Converting num_actv_rev_tl elements from float64 to int8
2023-12-13 11:34:53: Converting num_bc_sats elements from float64 to int8
2023-12-13 11:34:53: Converting num_bc_tl elements from float64 to int8
2023-12-13 11:34:53: Converting num_il_tl elements from float64 to int16
2023-12-13 11:34:54: Converting num_op_rev_tl elements from float64 to int8
2023-12-13 11:34:54: Converting num_rev_accts elements from float64 to int16
2023-12-13 11:34:55: Converting num_rev_tl_bal_gt_0 elements from float64 to int8
2023-12-13 11:34:55: Converting num_sats elements from float64 to int8
2023-12-13 11:34:56: Converting num_tl_120dpd_2m elements from float64 to int8
2023-12-13 11:34:56: Converting num_tl_30dpd elements from float64 to int8
2023-12-13 11:34:56: Converting num_tl_90g_dpd_24m elements from float64 to int8
2023-12-13 11:34:57: Converting num_tl_op_past_12m elements from float64 to int8
2023-12-13 11:34:57: Converting open_acc elements from float64 to int8
2023-12-13 11:34:57: Converting open_acc_6m elements from float64 to int8
2023-12-13 11:34:58: Converting open_act_il elements from float64 to int8
2023-12-13 11:34:58: Converting open_il_12m elements from float64 to int8
2023-12-13 11:34:59: Converting open_il_24m elements from float64 to int8
2023-12-13 11:34:59: Converting open_rv_12m elements from float64 to int8
2023-12-13 11:34:59: Converting open_rv_24m elements from float64 to int8
2023-12-13 11:35:00: Converting orig_projected_additional_accrued_interest elements from float64 to float32
2023-12-13 11:35:01: Converting out_prncp elements from float64 to float64
2023-12-13 11:35:01: Converting out_prncp_inv elements from float64 to float64
2023-12-13 11:35:02: Converting payment_plan_start_date_unix elements from int64 to int32
2023-12-13 11:35:02: Converting pct_tl_nvr_dlq elements from float64 to float32
2023-12-13 11:35:03: Converting percent_bc_gt_75 elements from float64 to float32
2023-12-13 11:35:04: Converting policy_code elements from float64 to bool
2023-12-13 11:35:04: Converting pub_rec elements from float64 to int8
2023-12-13 11:35:05: Converting pub_rec_bankruptcies elements from float64 to int8
2023-12-13 11:35:08: Converting purpose elements from object to object
2023-12-13 11:35:13: Converting pymnt_plan elements from object to object
2023-12-13 11:35:15: Converting recoveries elements from float64 to float64
2023-12-13 11:35:16: Converting revol_bal elements from float64 to int32
2023-12-13 11:35:17: Converting revol_bal_joint elements from float64 to int32
2023-12-13 11:35:17: Converting revol_util elements from float64 to float32
2023-12-13 11:35:18: Converting sec_app_chargeoff_within_12_mths elements from float64 to int8
2023-12-13 11:35:18: Converting sec_app_collections_12_mths_ex_med elements from float64 to int8
2023-12-13 11:35:19: Converting sec_app_earliest_cr_line_unix elements from int64 to int32
2023-12-13 11:35:19: Converting sec_app_fico_range_high elements from float64 to int16
2023-12-13 11:35:20: Converting sec_app_fico_range_low elements from float64 to int16
2023-12-13 11:35:20: Converting sec_app_inq_last_6mths elements from float64 to int8
2023-12-13 11:35:21: Converting sec_app_mort_acc elements from float64 to int8
2023-12-13 11:35:21: Converting sec_app_mths_since_last_major_derog elements from float64 to int16
2023-12-13 11:35:21: Converting sec_app_num_rev_accts elements from float64 to int8
2023-12-13 11:35:22: Converting sec_app_open_acc elements from float64 to int8
2023-12-13 11:35:22: Converting sec_app_open_act_il elements from float64 to int8
2023-12-13 11:35:23: Converting sec_app_revol_util elements from float64 to float32
2023-12-13 11:35:24: Converting settlement_amount elements from float64 to float64
2023-12-13 11:35:24: Converting settlement_date_unix elements from int64 to int32
2023-12-13 11:35:25: Converting settlement_percentage elements from float64 to float32
2023-12-13 11:35:26: Converting settlement_status elements from object to object
2023-12-13 11:35:26: Converting settlement_term elements from float64 to int16
2023-12-13 11:35:29: Converting sub_grade elements from object to object
2023-12-13 11:35:32: Converting tax_liens elements from float64 to int8
2023-12-13 11:35:32: Converting term_months elements from int64 to int8
2023-12-13 11:35:35: Converting title elements from object to object
2023-12-13 11:35:38: Converting tot_coll_amt elements from float64 to int32
2023-12-13 11:35:39: Converting tot_cur_bal elements from float64 to int32
2023-12-13 11:35:39: Converting tot_hi_cred_lim elements from float64 to int32
2023-12-13 11:35:40: Converting total_acc elements from float64 to int16
2023-12-13 11:35:40: Converting total_bal_ex_mort elements from float64 to int32
2023-12-13 11:35:41: Converting total_bal_il elements from float64 to int32
2023-12-13 11:35:41: Converting total_bc_limit elements from float64 to int32
2023-12-13 11:35:42: Converting total_cu_tl elements from float64 to int8
2023-12-13 11:35:42: Converting total_il_high_credit_limit elements from float64 to int32
2023-12-13 11:35:43: Converting total_pymnt elements from float64 to float64
2023-12-13 11:35:44: Converting total_pymnt_inv elements from float64 to float64
2023-12-13 11:35:44: Converting total_rec_int elements from float64 to float64
2023-12-13 11:35:45: Converting total_rec_late_fee elements from float64 to float32
2023-12-13 11:35:46: Converting total_rec_prncp elements from float64 to float64
2023-12-13 11:35:47: Converting total_rev_hi_lim elements from float64 to int32
2023-12-13 11:35:50: Converting url elements from object to object
2023-12-13 11:35:55: Converting verification_status elements from object to object
2023-12-13 11:35:58: Converting verification_status_joint elements from object to object
2023-12-13 11:36:02: Converting zip_code elements from object to int16
2023-12-13 11:36:05: Creating Metadata Dataframe
2023-12-13 11:36:05: Creating Descriptions Dataframe
2023-12-13 11:36:05: Connecting to Database
2023-12-13 11:36:05: Creating Queries
2023-12-13 11:36:05: Dropping old tables and creating new ones
2023-12-13 11:36:25: Loading data into tables
2023-12-13 11:37:46: ----------------------Done with csv_to_sqlite.py----------------------
2023-12-13 13:43:50: ----------------------Logger Initialized for csv_to_sqlite.py----------------------
2023-12-13 13:43:50: Reading Columns Full Names
2023-12-13 13:43:50: Reading Columns Descriptions
2023-12-13 13:43:50: Loading data CSV
2023-12-13 13:45:26: Loading Metadata
2023-12-13 13:45:26: Finding Date Columns
2023-12-13 13:45:38: Creating UNIX Timestamp Columns for Dates
2023-12-13 13:45:38: Converting column debt_settlement_flag_date to UNIX time
2023-12-13 13:45:39: Converting column earliest_cr_line to UNIX time
2023-12-13 13:45:39: Converting column hardship_end_date to UNIX time
2023-12-13 13:45:39: Converting column hardship_start_date to UNIX time
2023-12-13 13:45:39: Converting column issue_d to UNIX time
2023-12-13 13:45:40: Converting column last_credit_pull_d to UNIX time
2023-12-13 13:45:40: Converting column last_pymnt_d to UNIX time
2023-12-13 13:45:40: Converting column next_pymnt_d to UNIX time
2023-12-13 13:45:40: Converting column payment_plan_start_date to UNIX time
2023-12-13 13:45:40: Converting column sec_app_earliest_cr_line to UNIX time
2023-12-13 13:45:41: Converting column settlement_date to UNIX time
2023-12-13 13:45:41: Creating interesting columns
2023-12-13 13:45:43: Dropping uninteresting columns
2023-12-13 13:45:43: Dropping column member_id
2023-12-13 13:45:47: Dropping column term
2023-12-13 13:45:55: Dropping column emp_length
2023-12-13 13:45:59: Dropping column debt_settlement_flag_date
2023-12-13 13:46:01: Dropping column earliest_cr_line
2023-12-13 13:46:04: Dropping column hardship_end_date
2023-12-13 13:46:07: Dropping column hardship_start_date
2023-12-13 13:46:09: Dropping column issue_d
2023-12-13 13:46:11: Dropping column last_credit_pull_d
2023-12-13 13:46:14: Dropping column last_pymnt_d
2023-12-13 13:46:16: Dropping column next_pymnt_d
2023-12-13 13:46:18: Dropping column payment_plan_start_date
2023-12-13 13:46:20: Dropping column sec_app_earliest_cr_line
2023-12-13 13:46:23: Dropping column settlement_date
2023-12-13 13:46:25: Dropping column debt_settlement_flag_date_dt
2023-12-13 13:46:27: Dropping column earliest_cr_line_dt
2023-12-13 13:46:29: Dropping column hardship_end_date_dt
2023-12-13 13:46:31: Dropping column hardship_start_date_dt
2023-12-13 13:46:33: Dropping column issue_d_dt
2023-12-13 13:46:36: Dropping column last_credit_pull_d_dt
2023-12-13 13:46:38: Dropping column last_pymnt_d_dt
2023-12-13 13:46:40: Dropping column next_pymnt_d_dt
2023-12-13 13:46:42: Dropping column payment_plan_start_date_dt
2023-12-13 13:46:44: Dropping column sec_app_earliest_cr_line_dt
2023-12-13 13:46:46: Dropping column settlement_date_dt
2023-12-13 13:46:48: Filling NaNs on some columns
2023-12-13 13:46:48: Filling NaNs in column Ellipsis with -1
2023-12-13 15:15:37: ----------------------Logger Initialized for csv_to_sqlite.py----------------------
2023-12-13 15:15:37: Reading Columns Full Names
2023-12-13 15:15:37: Reading Columns Descriptions
2023-12-13 15:15:37: Loading data CSV
2023-12-13 15:17:32: Loading Metadata
2023-12-13 15:17:32: Finding Date Columns
2023-12-13 15:17:43: Creating UNIX Timestamp Columns for Dates
2023-12-13 15:17:43: Converting column debt_settlement_flag_date to UNIX time
2023-12-13 15:17:43: Converting column earliest_cr_line to UNIX time
2023-12-13 15:17:43: Converting column hardship_end_date to UNIX time
2023-12-13 15:17:44: Converting column hardship_start_date to UNIX time
2023-12-13 15:17:44: Converting column issue_d to UNIX time
2023-12-13 15:17:44: Converting column last_credit_pull_d to UNIX time
2023-12-13 15:17:44: Converting column last_pymnt_d to UNIX time
2023-12-13 15:17:44: Converting column next_pymnt_d to UNIX time
2023-12-13 15:17:45: Converting column payment_plan_start_date to UNIX time
2023-12-13 15:17:45: Converting column sec_app_earliest_cr_line to UNIX time
2023-12-13 15:17:45: Converting column settlement_date to UNIX time
2023-12-13 15:17:45: Creating interesting columns
2023-12-13 15:17:47: Dropping uninteresting columns
2023-12-13 15:17:47: Dropping column member_id
2023-12-13 15:17:50: Dropping column term
2023-12-13 15:17:52: Dropping column emp_length
2023-12-13 15:17:55: Dropping column debt_settlement_flag_date
2023-12-13 15:17:57: Dropping column earliest_cr_line
2023-12-13 15:18:00: Dropping column hardship_end_date
2023-12-13 15:18:02: Dropping column hardship_start_date
2023-12-13 15:18:04: Dropping column issue_d
2023-12-13 15:18:07: Dropping column last_credit_pull_d
2023-12-13 15:18:09: Dropping column last_pymnt_d
2023-12-13 15:18:11: Dropping column next_pymnt_d
2023-12-13 15:18:14: Dropping column payment_plan_start_date
2023-12-13 15:18:16: Dropping column sec_app_earliest_cr_line
2023-12-13 15:18:18: Dropping column settlement_date
2023-12-13 15:18:20: Dropping column debt_settlement_flag_date_dt
2023-12-13 15:18:23: Dropping column earliest_cr_line_dt
2023-12-13 15:18:25: Dropping column hardship_end_date_dt
2023-12-13 15:18:27: Dropping column hardship_start_date_dt
2023-12-13 15:18:29: Dropping column issue_d_dt
2023-12-13 15:18:31: Dropping column last_credit_pull_d_dt
2023-12-13 15:18:33: Dropping column last_pymnt_d_dt
2023-12-13 15:18:35: Dropping column next_pymnt_d_dt
2023-12-13 15:18:37: Dropping column payment_plan_start_date_dt
2023-12-13 15:18:39: Dropping column sec_app_earliest_cr_line_dt
2023-12-13 15:18:42: Dropping column settlement_date_dt
2023-12-13 15:18:44: Filling NaNs on some columns
2023-12-13 15:18:44: Filling NaNs in column Ellipsis with -1
2023-12-13 15:28:59: ----------------------Logger Initialized for csv_to_sqlite.py----------------------
2023-12-13 15:28:59: Reading Columns Full Names
2023-12-13 15:28:59: Reading Columns Descriptions
2023-12-13 15:28:59: Loading data CSV
2023-12-13 15:30:34: Loading Metadata
2023-12-13 15:30:34: Finding Date Columns
2023-12-13 15:30:44: Creating UNIX Timestamp Columns for Dates
2023-12-13 15:30:44: Converting column debt_settlement_flag_date to UNIX time
2023-12-13 15:30:44: Converting column earliest_cr_line to UNIX time
2023-12-13 15:30:45: Converting column hardship_end_date to UNIX time
2023-12-13 15:30:45: Converting column hardship_start_date to UNIX time
2023-12-13 15:30:45: Converting column issue_d to UNIX time
2023-12-13 15:30:45: Converting column last_credit_pull_d to UNIX time
2023-12-13 15:30:45: Converting column last_pymnt_d to UNIX time
2023-12-13 15:30:45: Converting column next_pymnt_d to UNIX time
2023-12-13 15:30:46: Converting column payment_plan_start_date to UNIX time
2023-12-13 15:30:46: Converting column sec_app_earliest_cr_line to UNIX time
2023-12-13 15:30:46: Converting column settlement_date to UNIX time
2023-12-13 15:30:46: Creating interesting columns
2023-12-13 15:30:48: Dropping uninteresting columns
2023-12-13 15:30:48: Dropping column member_id
2023-12-13 15:30:50: Dropping column term
2023-12-13 15:30:53: Dropping column emp_length
2023-12-13 15:30:55: Dropping column debt_settlement_flag_date
2023-12-13 15:30:57: Dropping column earliest_cr_line
2023-12-13 15:31:00: Dropping column hardship_end_date
2023-12-13 15:31:02: Dropping column hardship_start_date
2023-12-13 15:31:04: Dropping column issue_d
2023-12-13 15:31:07: Dropping column last_credit_pull_d
2023-12-13 15:31:09: Dropping column last_pymnt_d
2023-12-13 15:31:11: Dropping column next_pymnt_d
2023-12-13 15:31:14: Dropping column payment_plan_start_date
2023-12-13 15:31:16: Dropping column sec_app_earliest_cr_line
2023-12-13 15:31:18: Dropping column settlement_date
2023-12-13 15:31:20: Dropping column debt_settlement_flag_date_dt
2023-12-13 15:31:22: Dropping column earliest_cr_line_dt
2023-12-13 15:31:24: Dropping column hardship_end_date_dt
2023-12-13 15:31:26: Dropping column hardship_start_date_dt
2023-12-13 15:31:28: Dropping column issue_d_dt
2023-12-13 15:31:30: Dropping column last_credit_pull_d_dt
2023-12-13 15:31:32: Dropping column last_pymnt_d_dt
2023-12-13 15:31:34: Dropping column next_pymnt_d_dt
2023-12-13 15:31:37: Dropping column payment_plan_start_date_dt
2023-12-13 15:31:39: Dropping column sec_app_earliest_cr_line_dt
2023-12-13 15:31:41: Dropping column settlement_date_dt
2023-12-13 15:31:43: Filling NaNs on some columns
2023-12-13 15:31:43: Filling NaNs in column tot_coll_amt with -1
2023-12-13 15:31:43: Filling NaNs in column tot_cur_bal with -1
2023-12-13 15:31:43: Filling NaNs in column all_util with -1
2023-12-13 15:31:43: Filling NaNs in column annual_inc_joint with -1
2023-12-13 15:31:43: Filling NaNs in column bc_open_to_buy with -1
2023-12-13 15:31:43: Filling NaNs in column deferral_term with -1
2023-12-13 15:31:43: Filling NaNs in column collection_recovery_fee with -1
2023-12-13 15:31:43: Filling NaNs in column hardship_last_payment_amount with -1
2023-12-13 15:31:43: Filling NaNs in column hardship_payoff_balance_amount with -1
2023-12-13 15:31:43: Filling NaNs in column max_bal_bc with -1
2023-12-13 15:31:43: Filling NaNs in column mo_sin_old_il_acct with -1
2023-12-13 15:31:43: Filling NaNs in column mo_sin_old_rev_tl_op with -1
2023-12-13 15:31:43: Filling NaNs in column mo_sin_rcnt_rev_tl_op with -1
2023-12-13 15:31:43: Filling NaNs in column mo_sin_rcnt_tl with -1
2023-12-13 15:31:43: Filling NaNs in column mths_since_last_delinq with -1
2023-12-13 15:31:43: Filling NaNs in column mths_since_last_major_derog with -1
2023-12-13 15:31:43: Filling NaNs in column mths_since_last_record with -1
2023-12-13 15:31:43: Filling NaNs in column mths_since_rcnt_il with -1
2023-12-13 15:31:43: Filling NaNs in column mths_since_recent_bc with -1
2023-12-13 15:31:43: Filling NaNs in column mths_since_recent_bc_dlq with -1
2023-12-13 15:31:43: Filling NaNs in column mths_since_recent_inq with -1
2023-12-13 15:31:43: Filling NaNs in column mths_since_recent_revol_delinq with -1
2023-12-13 15:31:43: Filling NaNs in column revol_bal_joint with -1
2023-12-13 15:31:43: Filling NaNs in column sec_app_fico_range_high with -1
2023-12-13 15:31:43: Filling NaNs in column sec_app_fico_range_low with -1
2023-12-13 15:31:43: Filling NaNs in column sec_app_mort_acc with -1
2023-12-13 15:31:43: Filling NaNs in column sec_app_mths_since_last_major_derog with -1
2023-12-13 15:31:43: Filling NaNs in column settlement_amount with -1
2023-12-13 15:31:43: Filling NaNs in column settlement_percentage with -1
2023-12-13 15:31:43: Filling NaNs in column settlement_term with -1
2023-12-13 15:31:43: Filling NaNs in column zip_code with -1
2023-12-13 15:31:43: Filling NaNs in column total_rev_hi_lim with -1
2023-12-13 15:31:43: Filling NaNs in column tot_hi_cred_lim with -1
2023-12-13 15:31:43: Filling NaNs in column total_bc_limit with -1
2023-12-13 15:31:43: Filling NaNs in column total_il_high_credit_limit with -1
2023-12-13 15:31:43: Filling NaNs in column acc_now_delinq with 0
2023-12-13 15:31:43: Filling NaNs in column acc_open_past_24mths with 0
2023-12-13 15:31:43: Filling NaNs in column annual_inc with 0
2023-12-13 15:31:43: Filling NaNs in column avg_cur_bal with 0
2023-12-13 15:31:43: Filling NaNs in column chargeoff_within_12_mths with 0
2023-12-13 15:31:43: Filling NaNs in column collections_12_mths_ex_med with 0
2023-12-13 15:31:43: Filling NaNs in column delinq_2yrs with 0
2023-12-13 15:31:43: Filling NaNs in column delinq_amnt with 0
2023-12-13 15:31:43: Filling NaNs in column hardship_amount with 0
2023-12-13 15:31:43: Filling NaNs in column hardship_dpd with 0
2023-12-13 15:31:43: Filling NaNs in column hardship_length with 0
2023-12-13 15:31:43: Filling NaNs in column inq_fi with 0
2023-12-13 15:31:43: Filling NaNs in column inq_last_12m with 0
2023-12-13 15:31:43: Filling NaNs in column inq_last_6mths with 0
2023-12-13 15:31:43: Filling NaNs in column mort_acc with 0
2023-12-13 15:31:43: Filling NaNs in column num_accts_ever_120_pd with 0
2023-12-13 15:31:43: Filling NaNs in column num_actv_bc_tl with 0
2023-12-13 15:31:43: Filling NaNs in column num_actv_rev_tl with 0
2023-12-13 15:31:43: Filling NaNs in column num_tl_120dpd_2m with 0
2023-12-13 15:31:43: Filling NaNs in column open_acc_6m with 0
2023-12-13 15:31:43: Filling NaNs in column open_act_il with 0
2023-12-13 15:31:43: Filling NaNs in column open_il_12m with 0
2023-12-13 15:31:43: Filling NaNs in column open_il_24m with 0
2023-12-13 15:31:43: Filling NaNs in column open_rv_12m with 0
2023-12-13 15:31:43: Filling NaNs in column open_rv_24m with 0
2023-12-13 15:31:43: Filling NaNs in column orig_projected_additional_accrued_interest with 0
2023-12-13 15:31:43: Filling NaNs in column sec_app_chargeoff_within_12_mths with 0
2023-12-13 15:31:43: Filling NaNs in column sec_app_collections_12_mths_ex_med with 0
2023-12-13 15:31:43: Filling NaNs in column sec_app_inq_last_6mths with 0
2023-12-13 15:31:43: Filling NaNs in column sec_app_num_rev_accts with 0
2023-12-13 15:31:43: Filling NaNs in column sec_app_open_acc with 0
2023-12-13 15:31:43: Filling NaNs in column sec_app_open_act_il with 0
2023-12-13 15:31:43: Filling NaNs in column total_bal_il with 0
2023-12-13 15:31:43: Filling NaNs in column total_cu_tl with 0
2023-12-13 15:31:43: Filling NaNs in column open_acc with 0
2023-12-13 15:31:43: Filling NaNs in column pub_rec with 0
2023-12-13 15:31:43: Filling NaNs in column total_acc with 0
2023-12-13 15:31:43: Filling NaNs in column num_bc_sats with 0
2023-12-13 15:31:43: Filling NaNs in column num_bc_tl with 0
2023-12-13 15:31:43: Filling NaNs in column num_il_tl with 0
2023-12-13 15:31:43: Filling NaNs in column num_op_rev_tl with 0
2023-12-13 15:31:43: Filling NaNs in column num_rev_accts with 0
2023-12-13 15:31:43: Filling NaNs in column num_rev_tl_bal_gt_0 with 0
2023-12-13 15:31:43: Filling NaNs in column num_sats with 0
2023-12-13 15:31:43: Filling NaNs in column num_tl_30dpd with 0
2023-12-13 15:31:43: Filling NaNs in column num_tl_90g_dpd_24m with 0
2023-12-13 15:31:43: Filling NaNs in column num_tl_op_past_12m with 0
2023-12-13 15:31:43: Filling NaNs in column pub_rec_bankruptcies with 0
2023-12-13 15:31:43: Filling NaNs in column tax_liens with 0
2023-12-13 15:31:43: Filling NaNs in column total_bal_ex_mort with 0
2023-12-13 15:31:43: Filling NaNs in column bc_util with 1
2023-12-13 15:31:43: Filling NaNs in column dti with 1
2023-12-13 15:31:43: Filling NaNs in column dti_joint with 1
2023-12-13 15:31:43: Filling NaNs in column il_util with 1
2023-12-13 15:31:43: Filling NaNs in column revol_util with 1
2023-12-13 15:31:43: Filling NaNs in column sec_app_revol_util with 1
2023-12-13 15:31:43: Filling NaNs in column debt_settlement_flag with 'N'
2023-12-13 15:31:44: Filling NaNs in column hardship_flag with 'N'
2023-12-13 15:31:44: Filling NaNs in column desc with an empty string
2023-12-13 15:31:44: Filling NaNs in column emp_title with an empty string
2023-12-13 15:31:44: Filling NaNs in column addr_state with an empty string
2023-12-13 15:31:44: Filling NaNs in column application_type with an empty string
2023-12-13 15:31:44: Filling NaNs in column disbursement_method with an empty string
2023-12-13 15:31:44: Filling NaNs in column hardship_loan_status with an empty string
2023-12-13 15:31:44: Filling NaNs in column hardship_reason with an empty string
2023-12-13 15:31:44: Filling NaNs in column hardship_status with an empty string
2023-12-13 15:31:44: Filling NaNs in column settlement_status with an empty string
2023-12-13 15:31:44: Filling NaNs in column title with an empty string
2023-12-13 15:31:45: Filling NaNs in column verification_status_joint with an empty string
2023-12-13 15:31:45: Filling NaNs in column hardship_type with an empty string
2023-12-13 15:31:45: Filling NaNs in column pct_tl_nvr_dlq with 100
2023-12-13 15:31:45: Filling NaNs in column percent_bc_gt_75 with 100
2023-12-13 15:31:45: Dropping columns: ['fico_range_high', 'fico_range_low', 'funded_amnt', 'funded_amnt_inv', 'grade']
2023-12-13 15:31:47: Modifying Columns
2023-12-13 15:31:49: Casting columns to Best Types
2023-12-13 15:31:49: Converting acc_now_delinq elements from float64 to int8
2023-12-13 15:31:50: Converting acc_open_past_24mths elements from float64 to int8
2023-12-13 15:31:52: Converting addr_state elements from object to object
2023-12-13 15:31:55: Converting all_util elements from float64 to int16
2023-12-13 15:31:56: Converting annual_inc elements from float64 to float64
2023-12-13 15:31:56: Converting annual_inc_joint elements from float64 to float64
2023-12-13 15:31:59: Converting application_type elements from object to object
2023-12-13 15:32:02: Converting avg_cur_bal elements from float64 to int32
2023-12-13 15:32:03: Converting bc_open_to_buy elements from float64 to int32
2023-12-13 15:32:04: Converting bc_util elements from float64 to float32
2023-12-13 15:32:04: Converting chargeoff_within_12_mths elements from float64 to int8
2023-12-13 15:32:05: Converting collection_recovery_fee elements from float64 to float32
2023-12-13 15:32:05: Converting collections_12_mths_ex_med elements from float64 to int8
2023-12-13 15:32:06: Converting debt_settlement_flag elements from object to bool
2023-12-13 15:32:07: Converting debt_settlement_flag_date_unix elements from int64 to int32
2023-12-13 15:32:07: Converting deferral_term elements from float64 to int8
2023-12-13 15:32:08: Converting delinq_2yrs elements from float64 to int8
2023-12-13 15:32:08: Converting delinq_amnt elements from float64 to int32
2023-12-13 15:32:09: Converting desc elements from object to object
2023-12-13 15:32:12: Converting disbursement_method elements from object to object
2023-12-13 15:32:15: Converting dti elements from float64 to float32
2023-12-13 15:32:16: Converting dti_joint elements from float64 to float32
2023-12-13 15:32:17: Converting earliest_cr_line_unix elements from int64 to int32
2023-12-13 15:32:17: Converting emp_length_years elements from int64 to int8
2023-12-13 15:32:20: Converting emp_title elements from object to object
2023-12-13 15:32:23: Converting fico_range_high elements from float64 to int16
2023-12-13 15:32:23: Converting fico_range_low elements from float64 to int16
2023-12-13 15:32:24: Converting funded_amnt elements from float64 to int32
2023-12-13 15:32:24: Converting funded_amnt_inv elements from float64 to float64
2023-12-13 15:32:27: Converting grade elements from object to object
2023-12-13 15:32:30: Converting hardship_amount elements from float64 to float32
2023-12-13 15:32:30: Converting hardship_dpd elements from float64 to int8
2023-12-13 15:32:31: Converting hardship_end_date_unix elements from int64 to int32
2023-12-13 15:32:32: Converting hardship_flag elements from object to bool
2023-12-13 15:32:33: Converting hardship_last_payment_amount elements from float64 to float32
2023-12-13 15:32:33: Converting hardship_length elements from float64 to int8
2023-12-13 15:32:34: Converting hardship_loan_status elements from object to object
2023-12-13 15:32:35: Converting hardship_payoff_balance_amount elements from float64 to float64
2023-12-13 15:32:36: Converting hardship_reason elements from object to object
2023-12-13 15:32:36: Converting hardship_start_date_unix elements from int64 to int32
2023-12-13 15:32:37: Converting hardship_status elements from object to object
2023-12-13 15:32:38: Converting hardship_type elements from object to object
2023-12-13 15:32:41: Converting home_ownership elements from object to object
2023-12-13 15:32:44: Converting id elements from int64 to int32
2023-12-13 15:32:45: Converting il_util elements from float64 to int16
2023-12-13 15:32:47: Converting initial_list_status elements from object to object
2023-12-13 15:32:50: Converting inq_fi elements from float64 to int8
2023-12-13 15:32:50: Converting inq_last_12m elements from float64 to int8
2023-12-13 15:32:51: Converting inq_last_6mths elements from float64 to int8
2023-12-13 15:32:51: Converting installment elements from float64 to float32
2023-12-13 15:32:52: Converting int_rate elements from float64 to float32
2023-12-13 15:32:53: Converting issue_d_unix elements from int64 to int32
2023-12-13 15:32:53: Converting last_credit_pull_d_unix elements from int64 to int32
2023-12-13 15:32:54: Converting last_fico_range_high elements from float64 to int16
2023-12-13 15:32:54: Converting last_fico_range_low elements from float64 to int16
2023-12-13 15:32:55: Converting last_pymnt_amnt elements from float64 to float64
2023-12-13 15:32:55: Converting last_pymnt_d_unix elements from int64 to int32
2023-12-13 15:32:56: Converting loan_amnt elements from float64 to int32
2023-12-13 15:32:59: Converting loan_status elements from object to object
2023-12-13 15:33:01: Converting max_bal_bc elements from float64 to int32
2023-12-13 15:33:02: Converting mo_sin_old_il_acct elements from float64 to int16
2023-12-13 15:33:02: Converting mo_sin_old_rev_tl_op elements from float64 to int16
2023-12-13 15:33:03: Converting mo_sin_rcnt_rev_tl_op elements from float64 to int16
2023-12-13 15:33:03: Converting mo_sin_rcnt_tl elements from float64 to int16
2023-12-13 15:33:04: Converting mort_acc elements from float64 to int8
2023-12-13 15:33:04: Converting mths_since_last_delinq elements from float64 to int16
2023-12-13 15:33:05: Converting mths_since_last_major_derog elements from float64 to int16
2023-12-13 15:33:05: Converting mths_since_last_record elements from float64 to int16
2023-12-13 15:33:06: Converting mths_since_rcnt_il elements from float64 to int16
2023-12-13 15:33:06: Converting mths_since_recent_bc elements from float64 to int16
2023-12-13 15:33:06: Converting mths_since_recent_bc_dlq elements from float64 to int16
2023-12-13 15:33:07: Converting mths_since_recent_inq elements from float64 to int8
2023-12-13 15:33:07: Converting mths_since_recent_revol_delinq elements from float64 to int16
2023-12-13 15:33:08: Converting next_pymnt_d_unix elements from int64 to int32
2023-12-13 15:33:08: Converting num_accts_ever_120_pd elements from float64 to int8
2023-12-13 15:33:09: Converting num_actv_bc_tl elements from float64 to int8
2023-12-13 15:33:09: Converting num_actv_rev_tl elements from float64 to int8
2023-12-13 15:33:09: Converting num_bc_sats elements from float64 to int8
2023-12-13 15:33:10: Converting num_bc_tl elements from float64 to int8
2023-12-13 15:33:10: Converting num_il_tl elements from float64 to int16
2023-12-13 15:33:11: Converting num_op_rev_tl elements from float64 to int8
2023-12-13 15:33:11: Converting num_rev_accts elements from float64 to int16
2023-12-13 15:33:11: Converting num_rev_tl_bal_gt_0 elements from float64 to int8
2023-12-13 15:33:12: Converting num_sats elements from float64 to int8
2023-12-13 15:33:12: Converting num_tl_120dpd_2m elements from float64 to int8
2023-12-13 15:33:13: Converting num_tl_30dpd elements from float64 to int8
2023-12-13 15:33:13: Converting num_tl_90g_dpd_24m elements from float64 to int8
2023-12-13 15:33:13: Converting num_tl_op_past_12m elements from float64 to int8
2023-12-13 15:33:14: Converting open_acc elements from float64 to int8
2023-12-13 15:33:14: Converting open_acc_6m elements from float64 to int8
2023-12-13 15:33:15: Converting open_act_il elements from float64 to int8
2023-12-13 15:33:15: Converting open_il_12m elements from float64 to int8
2023-12-13 15:33:15: Converting open_il_24m elements from float64 to int8
2023-12-13 15:33:16: Converting open_rv_12m elements from float64 to int8
2023-12-13 15:33:16: Converting open_rv_24m elements from float64 to int8
2023-12-13 15:33:17: Converting orig_projected_additional_accrued_interest elements from float64 to float32
2023-12-13 15:33:17: Converting out_prncp elements from float64 to float64
2023-12-13 15:33:18: Converting out_prncp_inv elements from float64 to float64
2023-12-13 15:33:18: Converting payment_plan_start_date_unix elements from int64 to int32
2023-12-13 15:33:19: Converting pct_tl_nvr_dlq elements from float64 to float32
2023-12-13 15:33:20: Converting percent_bc_gt_75 elements from float64 to float32
2023-12-13 15:33:20: Converting policy_code elements from float64 to bool
2023-12-13 15:33:21: Converting pub_rec elements from float64 to int8
2023-12-13 15:33:21: Converting pub_rec_bankruptcies elements from float64 to int8
2023-12-13 15:33:24: Converting purpose elements from object to object
2023-12-13 15:33:29: Converting pymnt_plan elements from object to object
2023-12-13 15:33:32: Converting recoveries elements from float64 to float64
2023-12-13 15:33:32: Converting revol_bal elements from float64 to int32
2023-12-13 15:33:33: Converting revol_bal_joint elements from float64 to int32
2023-12-13 15:33:34: Converting revol_util elements from float64 to float32
2023-12-13 15:33:34: Converting sec_app_chargeoff_within_12_mths elements from float64 to int8
2023-12-13 15:33:35: Converting sec_app_collections_12_mths_ex_med elements from float64 to int8
2023-12-13 15:33:35: Converting sec_app_earliest_cr_line_unix elements from int64 to int32
2023-12-13 15:33:36: Converting sec_app_fico_range_high elements from float64 to int16
2023-12-13 15:33:36: Converting sec_app_fico_range_low elements from float64 to int16
2023-12-13 15:33:37: Converting sec_app_inq_last_6mths elements from float64 to int8
2023-12-13 15:33:37: Converting sec_app_mort_acc elements from float64 to int8
2023-12-13 15:33:37: Converting sec_app_mths_since_last_major_derog elements from float64 to int16
2023-12-13 15:33:38: Converting sec_app_num_rev_accts elements from float64 to int8
2023-12-13 15:33:38: Converting sec_app_open_acc elements from float64 to int8
2023-12-13 15:33:39: Converting sec_app_open_act_il elements from float64 to int8
2023-12-13 15:33:39: Converting sec_app_revol_util elements from float64 to float32
2023-12-13 15:33:40: Converting settlement_amount elements from float64 to float64
2023-12-13 15:33:41: Converting settlement_date_unix elements from int64 to int32
2023-12-13 15:33:41: Converting settlement_percentage elements from float64 to float32
2023-12-13 15:33:42: Converting settlement_status elements from object to object
2023-12-13 15:33:43: Converting settlement_term elements from float64 to int16
2023-12-13 15:33:46: Converting sub_grade elements from object to object
2023-12-13 15:33:48: Converting tax_liens elements from float64 to int8
2023-12-13 15:33:49: Converting term_months elements from int64 to int8
2023-12-13 15:33:52: Converting title elements from object to object
2023-12-13 15:33:54: Converting tot_coll_amt elements from float64 to int32
2023-12-13 15:33:55: Converting tot_cur_bal elements from float64 to int32
2023-12-13 15:33:56: Converting tot_hi_cred_lim elements from float64 to int32
2023-12-13 15:33:56: Converting total_acc elements from float64 to int16
2023-12-13 15:33:57: Converting total_bal_ex_mort elements from float64 to int32
2023-12-13 15:33:57: Converting total_bal_il elements from float64 to int32
2023-12-13 15:33:58: Converting total_bc_limit elements from float64 to int32
2023-12-13 15:33:58: Converting total_cu_tl elements from float64 to int8
2023-12-13 15:33:59: Converting total_il_high_credit_limit elements from float64 to int32
2023-12-13 15:33:59: Converting total_pymnt elements from float64 to float64
2023-12-13 15:34:00: Converting total_pymnt_inv elements from float64 to float64
2023-12-13 15:34:01: Converting total_rec_int elements from float64 to float64
2023-12-13 15:34:02: Converting total_rec_late_fee elements from float64 to float32
2023-12-13 15:34:02: Converting total_rec_prncp elements from float64 to float64
2023-12-13 15:34:03: Converting total_rev_hi_lim elements from float64 to int32
2023-12-13 15:34:06: Converting url elements from object to object
2023-12-13 15:34:11: Converting verification_status elements from object to object
2023-12-13 15:34:15: Converting verification_status_joint elements from object to object
2023-12-13 15:34:18: Converting zip_code elements from object to int16
2023-12-13 15:34:21: Creating Metadata Dataframe
2023-12-13 15:34:22: Creating Descriptions Dataframe
2023-12-13 15:34:22: Connecting to Database
2023-12-13 15:34:22: Creating Queries
2023-12-13 15:34:22: Dropping old tables and creating new ones
2023-12-13 15:34:59: Loading data into tables
2023-12-13 15:36:52: ----------------------Done with csv_to_sqlite.py----------------------
2023-12-13 15:45:58: ----------------------Logger Initialized for exploratory_data_analysis.py----------------------
2023-12-13 15:45:58: Loading Data
2023-12-13 15:47:28: ----------------------Logger Initialized for exploratory_data_analysis.py----------------------
2023-12-13 15:47:28: Loading Data
2023-12-13 15:48:10: ----------------------Logger Initialized for exploratory_data_analysis.py----------------------
2023-12-13 15:48:10: Loading Data
2023-12-13 15:50:09: ----------------------Logger Initialized for exploratory_data_analysis.py----------------------
2023-12-13 15:50:09: Loading Data
2023-12-13 15:50:10: Filtering known bad columns
2023-12-13 15:50:10: Creating columns
2023-12-13 15:50:10: Limiting dataset to two types of Loan Status only
2023-12-13 15:50:10: Computing Numerical Statistics for All Columns
2023-12-13 15:50:11: Plotting Loan_Status_Distribution
2023-12-13 15:50:11: Plotting Correlation_Matrix
2023-12-13 15:50:11: Plotting Distribution_of_Installments_By_Loan_Status
2023-12-13 15:50:12: Plotting Distribution_of_Loan_Amount_By_Loan_Status
2023-12-13 15:50:12: Plotting Distribution_of_Interest_Rate_By_Loan_Status
2023-12-13 15:50:12: Plotting Distribution_of_Annual_Income_By_Loan_Status
2023-12-13 15:50:12: Plotting Violin_of_Installments_By_Loan_Status
2023-12-13 15:50:13: Plotting Violin_of_Loan_Amount_By_Loan_Status
2023-12-13 15:50:13: Plotting Distribution_of_Loan_Grade_By_Loan_Status
2023-12-13 15:50:13: Plotting Distribution_of_Loan_Sub_Grade_By_Loan_Status
2023-12-13 15:50:13: Plotting Distribution_of_Home_Ownership_Status_By_Loan_Status
2023-12-13 15:50:14: Plotting Distribution_of_Income_Verification_Status_By_Loan_Status
2023-12-13 15:50:14: Plotting Distribution_of_Term_Length_By_Loan_Status
2023-12-13 15:50:14: Plotting Distribution_of_Loan_Purpose_By_Loan_Status
2023-12-13 15:50:14: Plotting Distribution_of_Issue_Date_By_Loan_Status
2023-12-13 15:50:15: Plotting Distribution_of_Debt_To_Income_By_Loan_Status
2023-12-13 15:50:15: Plotting Distribution_of_Number_Of_Open_Accounts_By_Loan_Status
2023-12-13 15:50:15: Plotting Distribution_of_Revolving_Line_Utilization_Rate_By_Loan_Status
2023-12-13 15:50:15: Plotting Distribution_of_Revolving_Balance_By_Loan_Status
2023-12-13 15:50:15: Plotting Distribution_of_Number_of_Public_Records_By_Loan_Status
2023-12-13 15:50:16: Plotting Distribution_of_Initial_Listing_Status_By_Loan_Status
2023-12-13 15:50:16: Plotting Distribution_of_Application_Type_By_Loan_Status
2023-12-13 15:50:16: Plotting Distribution_of_Number_of_Public_Record_Bankruptcies_By_Loan_Status
2023-12-13 15:50:16: Plotting Correlation_Between_Loan_Status_And_Numerical_Features
2023-12-13 15:50:17: Creating Automated Exploratory Data Analysis Report, will only show after github push.
2023-12-13 15:51:03: ----------------------Logger Initialized for exploratory_data_analysis.py----------------------
2023-12-13 15:51:03: Loading Data
2023-12-13 15:51:44: Filtering known bad columns
2023-12-13 15:51:47: Creating columns
2023-12-13 15:51:47: Limiting dataset to two types of Loan Status only
2023-12-13 15:51:48: Computing Numerical Statistics for All Columns
2023-12-13 15:51:48: Plotting Loan_Status_Distribution
2023-12-13 15:51:52: Plotting Correlation_Matrix
2023-12-13 15:51:54: Plotting Distribution_of_Installments_By_Loan_Status
2023-12-13 15:51:56: Plotting Distribution_of_Loan_Amount_By_Loan_Status
2023-12-13 15:51:58: Plotting Distribution_of_Interest_Rate_By_Loan_Status
2023-12-13 15:52:00: Plotting Distribution_of_Annual_Income_By_Loan_Status
2023-12-13 15:52:02: Plotting Violin_of_Installments_By_Loan_Status
2023-12-13 15:52:14: Plotting Violin_of_Loan_Amount_By_Loan_Status
2023-12-13 15:52:27: Plotting Distribution_of_Loan_Grade_By_Loan_Status
2023-12-13 15:52:33: Plotting Distribution_of_Loan_Sub_Grade_By_Loan_Status
2023-12-13 15:52:42: Plotting Distribution_of_Home_Ownership_Status_By_Loan_Status
2023-12-13 15:52:51: Plotting Distribution_of_Income_Verification_Status_By_Loan_Status
2023-12-13 15:53:00: Plotting Distribution_of_Term_Length_By_Loan_Status
2023-12-13 15:53:07: Plotting Distribution_of_Loan_Purpose_By_Loan_Status
2023-12-13 15:53:16: Plotting Distribution_of_Issue_Date_By_Loan_Status
2023-12-13 15:53:21: Plotting Distribution_of_Debt_To_Income_By_Loan_Status
2023-12-13 15:53:23: Plotting Distribution_of_Number_Of_Open_Accounts_By_Loan_Status
2023-12-13 15:53:25: Plotting Distribution_of_Revolving_Line_Utilization_Rate_By_Loan_Status
2023-12-13 15:53:27: Plotting Distribution_of_Revolving_Balance_By_Loan_Status
2023-12-13 15:53:28: Plotting Distribution_of_Number_of_Public_Records_By_Loan_Status
2023-12-13 15:53:35: Plotting Distribution_of_Initial_Listing_Status_By_Loan_Status
2023-12-13 15:53:41: Plotting Distribution_of_Application_Type_By_Loan_Status
2023-12-13 15:53:50: Plotting Distribution_of_Number_of_Public_Record_Bankruptcies_By_Loan_Status
2023-12-13 15:53:58: Plotting Correlation_Between_Loan_Status_And_Numerical_Features
2023-12-13 15:53:58: Creating Automated Exploratory Data Analysis Report, will only show after github push.
2023-12-13 15:53:58: Done!
2023-12-13 16:00:43: ----------------------Logger Initialized for exploratory_data_analysis.py----------------------
2023-12-13 16:00:43: Loading Data
2023-12-13 16:01:32: Filtering known bad columns
2023-12-13 16:01:34: Creating columns
2023-12-13 16:01:34: Limiting dataset to two types of Loan Status only
2023-12-13 16:01:36: Computing Numerical Statistics for All Columns
2023-12-13 16:01:36: Plotting Loan_Status_Distribution
2023-12-13 16:01:41: Plotting Correlation_Matrix
2023-12-13 16:01:42: Plotting Distribution_of_Installments_By_Loan_Status
2023-12-13 16:01:44: Plotting Distribution_of_Loan_Amount_By_Loan_Status
2023-12-13 16:01:46: Plotting Distribution_of_Interest_Rate_By_Loan_Status
2023-12-13 16:01:48: Plotting Distribution_of_Annual_Income_By_Loan_Status
2023-12-13 16:01:50: Plotting Violin_of_Installments_By_Loan_Status
2023-12-13 16:02:05: Plotting Violin_of_Loan_Amount_By_Loan_Status
2023-12-13 16:02:19: Plotting Distribution_of_Loan_Grade_By_Loan_Status
2023-12-13 16:02:25: Plotting Distribution_of_Loan_Sub_Grade_By_Loan_Status
2023-12-13 16:02:35: Plotting Distribution_of_Home_Ownership_Status_By_Loan_Status
2023-12-13 16:02:44: Plotting Distribution_of_Income_Verification_Status_By_Loan_Status
2023-12-13 16:02:53: Plotting Distribution_of_Term_Length_By_Loan_Status
2023-12-13 16:03:00: Plotting Distribution_of_Loan_Purpose_By_Loan_Status
2023-12-13 16:03:09: Plotting Distribution_of_Issue_Date_By_Loan_Status
2023-12-13 16:03:15: Plotting Distribution_of_Debt_To_Income_By_Loan_Status
2023-12-13 16:03:17: Plotting Distribution_of_Number_Of_Open_Accounts_By_Loan_Status
2023-12-13 16:03:19: Plotting Distribution_of_Revolving_Line_Utilization_Rate_By_Loan_Status
2023-12-13 16:03:21: Plotting Distribution_of_Revolving_Balance_By_Loan_Status
2023-12-13 16:03:22: Plotting Distribution_of_Number_of_Public_Records_By_Loan_Status
2023-12-13 16:03:29: Plotting Distribution_of_Initial_Listing_Status_By_Loan_Status
2023-12-13 16:03:35: Plotting Distribution_of_Application_Type_By_Loan_Status
2023-12-13 16:03:45: Plotting Distribution_of_Number_of_Public_Record_Bankruptcies_By_Loan_Status
2023-12-13 16:03:53: Plotting Correlation_Between_Loan_Status_And_Numerical_Features
2023-12-13 16:03:53: Creating Automated Exploratory Data Analysis Report, will only show after github push.
2023-12-13 16:03:53: Done!
2023-12-13 16:13:29: ----------------------Logger Initialized for exploratory_data_analysis.py----------------------
2023-12-13 16:13:29: Loading Data
2023-12-13 16:14:13: Filtering known bad columns
2023-12-13 16:14:16: Creating columns
2023-12-13 16:14:16: Limiting dataset to two types of Loan Status only
2023-12-13 16:14:17: Computing Numerical Statistics for All Columns
2023-12-13 16:14:18: Plotting Loan_Status_Distribution
2023-12-13 16:14:22: Plotting Correlation_Matrix
2023-12-13 16:14:23: Plotting Distribution_of_Installments_By_Loan_Status
2023-12-13 16:14:26: Plotting Distribution_of_Loan_Amount_By_Loan_Status
2023-12-13 16:14:28: Plotting Distribution_of_Interest_Rate_By_Loan_Status
2023-12-13 16:14:29: Plotting Distribution_of_Annual_Income_By_Loan_Status
2023-12-13 16:14:31: Plotting Violin_of_Installments_By_Loan_Status
2023-12-13 16:14:45: Plotting Violin_of_Loan_Amount_By_Loan_Status
2023-12-13 16:14:58: Plotting Distribution_of_Loan_Grade_By_Loan_Status
2023-12-13 16:15:04: Plotting Distribution_of_Loan_Sub_Grade_By_Loan_Status
2023-12-13 16:15:14: Plotting Distribution_of_Home_Ownership_Status_By_Loan_Status
2023-12-13 16:15:23: Plotting Distribution_of_Income_Verification_Status_By_Loan_Status
2023-12-13 16:15:33: Plotting Distribution_of_Term_Length_By_Loan_Status
2023-12-13 16:15:40: Plotting Distribution_of_Loan_Purpose_By_Loan_Status
2023-12-13 16:15:49: Plotting Distribution_of_Issue_Date_By_Loan_Status
2023-12-13 16:15:54: Plotting Distribution_of_Debt_To_Income_By_Loan_Status
2023-12-13 16:15:56: Plotting Distribution_of_Number_Of_Open_Accounts_By_Loan_Status
2023-12-13 16:15:58: Plotting Distribution_of_Revolving_Line_Utilization_Rate_By_Loan_Status
2023-12-13 16:16:00: Plotting Distribution_of_Revolving_Balance_By_Loan_Status
2023-12-13 16:16:02: Plotting Distribution_of_Number_of_Public_Records_By_Loan_Status
2023-12-13 16:16:09: Plotting Distribution_of_Initial_Listing_Status_By_Loan_Status
2023-12-13 16:16:15: Plotting Distribution_of_Application_Type_By_Loan_Status
2023-12-13 16:16:24: Plotting Distribution_of_Number_of_Public_Record_Bankruptcies_By_Loan_Status
2023-12-13 16:16:32: Plotting Correlation_Between_Loan_Status_And_Numerical_Features
2023-12-13 16:16:32: Creating Automated Exploratory Data Analysis Report, will only show after github push.
2023-12-13 16:16:32: Done!
2023-12-14 20:24:58: ----------------------Logger Initialized for exploratory_data_analysis.py----------------------
2023-12-14 20:24:58: Loading Data
2023-12-14 20:25:43: Filtering known bad columns
2023-12-14 20:25:45: Creating columns
2023-12-14 20:25:49: Limiting dataset to two types of Loan Status only
2023-12-14 20:25:50: Declaring Numerical Columns
2023-12-14 20:25:50: Declaring Dummy Columns
2023-12-14 20:25:50: Declaring Columns to Drop
2023-12-14 20:25:50: Dropping Non-Interesting Columns
2023-12-14 20:25:51: Creating Dummy Columns
2023-12-14 20:25:54: Connecting to Database at outputs/prototype/data/All_Lending_Club_Loan_2007_2018.sqlite
2023-12-14 20:25:54: Creating Queries
2023-12-14 20:25:54: Dropping old tables and creating new ones
2023-12-14 20:25:55: Loading data into tables
2023-12-14 20:26:28: Done!
